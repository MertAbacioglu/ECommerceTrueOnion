// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrueOnion.PERSISTINCE.Context;

#nullable disable

namespace TrueOnion.PERSISTINCE.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InsertedDate = new DateTime(2023, 1, 2, 16, 19, 33, 615, DateTimeKind.Local).AddTicks(7096),
                            Name = "Admin",
                            NormalizedName = "ADMIN",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            InsertedDate = new DateTime(2023, 1, 2, 16, 19, 33, 615, DateTimeKind.Local).AddTicks(7340),
                            Name = "Member",
                            NormalizedName = "MEMBER",
                            Status = 1
                        });
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "dd1d7b22-7c5e-446b-a976-3d12d7cacea4",
                            Email = "Shana.Ferry43@gmail.com",
                            EmailConfirmed = false,
                            InsertedDate = new DateTime(2022, 12, 22, 10, 55, 6, 950, DateTimeKind.Unspecified).AddTicks(9221),
                            LockoutEnabled = false,
                            NormalizedEmail = "SHANA.FERRY43@GMAIL.COM",
                            NormalizedUserName = "KAILEY14",
                            PasswordHash = "9mlbBWzLct",
                            PhoneNumber = "335-721-8641",
                            PhoneNumberConfirmed = false,
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "Kailey14"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cf329f3e-7819-4afb-b682-c1fb928cdfff",
                            Email = "Dewitt_Spinka5@yahoo.com",
                            EmailConfirmed = false,
                            InsertedDate = new DateTime(2021, 9, 14, 20, 38, 11, 844, DateTimeKind.Unspecified).AddTicks(1733),
                            LockoutEnabled = false,
                            NormalizedEmail = "DEWITT_SPINKA5@YAHOO.COM",
                            NormalizedUserName = "THEO98",
                            PasswordHash = "QqZoEE1Nes",
                            PhoneNumber = "686.976.3792",
                            PhoneNumberConfirmed = false,
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "Theo98"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "372ea579-aa03-4439-932f-5ac89d135b36",
                            Email = "Sarah50@gmail.com",
                            EmailConfirmed = false,
                            InsertedDate = new DateTime(2022, 9, 8, 5, 59, 26, 29, DateTimeKind.Unspecified).AddTicks(4732),
                            LockoutEnabled = false,
                            NormalizedEmail = "SARAH50@GMAIL.COM",
                            NormalizedUserName = "STANFORD.HOWE75",
                            PasswordHash = "gHxx_4vOhG",
                            PhoneNumber = "282-854-6760",
                            PhoneNumberConfirmed = false,
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "Stanford.Howe75"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "76330b5c-f722-4c1b-832e-b9f7d1b45c3f",
                            Email = "Ottilie_Davis71@hotmail.com",
                            EmailConfirmed = false,
                            InsertedDate = new DateTime(2021, 2, 10, 15, 41, 42, 426, DateTimeKind.Unspecified).AddTicks(5076),
                            LockoutEnabled = false,
                            NormalizedEmail = "OTTILIE_DAVIS71@HOTMAIL.COM",
                            NormalizedUserName = "LENNA.KSHLERIN32",
                            PasswordHash = "tBCSOXZiIw",
                            PhoneNumber = "(842) 212-9082 x79900",
                            PhoneNumberConfirmed = false,
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "Lenna.Kshlerin32"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a307bf15-3199-47ab-bc17-afc35b0f1464",
                            Email = "Clair_Nikolaus62@hotmail.com",
                            EmailConfirmed = false,
                            InsertedDate = new DateTime(2022, 1, 4, 23, 15, 33, 389, DateTimeKind.Unspecified).AddTicks(7015),
                            LockoutEnabled = false,
                            NormalizedEmail = "CLAIR_NIKOLAUS62@HOTMAIL.COM",
                            NormalizedUserName = "EMMITT_GERHOLD",
                            PasswordHash = "vJInsGMlRr",
                            PhoneNumber = "(304) 736-5296",
                            PhoneNumberConfirmed = false,
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "Emmitt_Gerhold"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "56647723-9008-452e-8b8b-6b688e2f4f60",
                            Email = "Sandy_Luettgen20@yahoo.com",
                            EmailConfirmed = false,
                            InsertedDate = new DateTime(2021, 5, 19, 2, 22, 15, 752, DateTimeKind.Unspecified).AddTicks(8830),
                            LockoutEnabled = false,
                            NormalizedEmail = "SANDY_LUETTGEN20@YAHOO.COM",
                            NormalizedUserName = "YVETTE.RODRIGUEZ",
                            PasswordHash = "bUDuNuWtCr",
                            PhoneNumber = "840-799-7770",
                            PhoneNumberConfirmed = false,
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "Yvette.Rodriguez"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cab903cc-b873-47d3-b7d2-884be2d9e438",
                            Email = "Margarita21@gmail.com",
                            EmailConfirmed = false,
                            InsertedDate = new DateTime(2021, 3, 2, 10, 54, 2, 63, DateTimeKind.Unspecified).AddTicks(4479),
                            LockoutEnabled = false,
                            NormalizedEmail = "MARGARITA21@GMAIL.COM",
                            NormalizedUserName = "ASHLYNN_ROMAGUERA",
                            PasswordHash = "VPGmsook3D",
                            PhoneNumber = "1-963-931-3099 x218",
                            PhoneNumberConfirmed = false,
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "Ashlynn_Romaguera"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "102e31d0-bb5b-4144-b225-3a721cbd14db",
                            Email = "Rickey.McGlynn@gmail.com",
                            EmailConfirmed = false,
                            InsertedDate = new DateTime(2020, 7, 14, 6, 9, 52, 973, DateTimeKind.Unspecified).AddTicks(8298),
                            LockoutEnabled = false,
                            NormalizedEmail = "RICKEY.MCGLYNN@GMAIL.COM",
                            NormalizedUserName = "ADRIEL.LEHNER",
                            PasswordHash = "hydM66XiIH",
                            PhoneNumber = "1-983-951-7654 x299",
                            PhoneNumberConfirmed = false,
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "Adriel.Lehner"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "110e830e-b1dc-4672-bda6-09e65a53ca0a",
                            Email = "Hazle_Runolfsson41@hotmail.com",
                            EmailConfirmed = false,
                            InsertedDate = new DateTime(2022, 12, 24, 21, 23, 14, 698, DateTimeKind.Unspecified).AddTicks(2767),
                            LockoutEnabled = false,
                            NormalizedEmail = "HAZLE_RUNOLFSSON41@HOTMAIL.COM",
                            NormalizedUserName = "VALENTINA_LEHNER",
                            PasswordHash = "2qs8OIy6Qd",
                            PhoneNumber = "1-350-732-6503 x464",
                            PhoneNumberConfirmed = false,
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "Valentina_Lehner"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ff6f22a4-6338-4481-ab97-d2620b1bc44e",
                            Email = "Irwin.Franecki@gmail.com",
                            EmailConfirmed = false,
                            InsertedDate = new DateTime(2021, 5, 13, 10, 42, 14, 91, DateTimeKind.Unspecified).AddTicks(7668),
                            LockoutEnabled = false,
                            NormalizedEmail = "IRWIN.FRANECKI@GMAIL.COM",
                            NormalizedUserName = "SERENA_STROSIN41",
                            PasswordHash = "M4fAGE7nPN",
                            PhoneNumber = "772.286.7984 x83045",
                            PhoneNumberConfirmed = false,
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "Serena_Strosin41"
                        });
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppUserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppUserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "All",
                            InsertedDate = new DateTime(2021, 9, 24, 1, 15, 15, 843, DateTimeKind.Unspecified).AddTicks(2825),
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Home",
                            InsertedDate = new DateTime(2020, 10, 14, 21, 10, 8, 486, DateTimeKind.Unspecified).AddTicks(1703),
                            ParentID = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Electronics",
                            InsertedDate = new DateTime(2022, 3, 31, 18, 11, 41, 847, DateTimeKind.Unspecified).AddTicks(9764),
                            ParentID = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Clothing",
                            InsertedDate = new DateTime(2021, 3, 11, 8, 58, 50, 856, DateTimeKind.Unspecified).AddTicks(5120),
                            ParentID = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Books",
                            InsertedDate = new DateTime(2020, 7, 22, 17, 30, 50, 743, DateTimeKind.Unspecified).AddTicks(1958),
                            ParentID = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Baby",
                            InsertedDate = new DateTime(2021, 5, 14, 21, 12, 32, 689, DateTimeKind.Unspecified).AddTicks(3795),
                            ParentID = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CategoryName = "Automotive",
                            InsertedDate = new DateTime(2021, 10, 10, 8, 9, 46, 98, DateTimeKind.Unspecified).AddTicks(9409),
                            ParentID = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            CategoryName = "Clothing",
                            InsertedDate = new DateTime(2021, 12, 23, 23, 24, 38, 863, DateTimeKind.Unspecified).AddTicks(5719),
                            ParentID = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            CategoryName = "Movies",
                            InsertedDate = new DateTime(2021, 11, 27, 17, 26, 28, 610, DateTimeKind.Unspecified).AddTicks(751),
                            ParentID = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            CategoryName = "Jewelery",
                            InsertedDate = new DateTime(2021, 3, 16, 21, 6, 48, 263, DateTimeKind.Unspecified).AddTicks(4687),
                            ParentID = 3,
                            Status = 1
                        });
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryID = 10,
                            InsertedDate = new DateTime(2021, 6, 1, 22, 43, 56, 674, DateTimeKind.Unspecified).AddTicks(44),
                            Name = "Handmade Soft Sausages",
                            Price = 54m,
                            Status = 1,
                            Stock = 88
                        },
                        new
                        {
                            Id = 2,
                            CategoryID = 1,
                            InsertedDate = new DateTime(2021, 4, 21, 22, 15, 10, 79, DateTimeKind.Unspecified).AddTicks(4403),
                            Name = "Tasty Steel Mouse",
                            Price = 52m,
                            Status = 1,
                            Stock = 4
                        },
                        new
                        {
                            Id = 3,
                            CategoryID = 5,
                            InsertedDate = new DateTime(2021, 3, 23, 18, 12, 56, 61, DateTimeKind.Unspecified).AddTicks(9657),
                            Name = "Tasty Concrete Chips",
                            Price = 52m,
                            Status = 1,
                            Stock = 76
                        },
                        new
                        {
                            Id = 4,
                            CategoryID = 4,
                            InsertedDate = new DateTime(2022, 4, 25, 3, 43, 45, 289, DateTimeKind.Unspecified).AddTicks(5709),
                            Name = "Handmade Soft Tuna",
                            Price = 51m,
                            Status = 1,
                            Stock = 184
                        },
                        new
                        {
                            Id = 5,
                            CategoryID = 2,
                            InsertedDate = new DateTime(2021, 5, 5, 18, 53, 55, 275, DateTimeKind.Unspecified).AddTicks(2004),
                            Name = "Unbranded Concrete Computer",
                            Price = 52m,
                            Status = 1,
                            Stock = 165
                        },
                        new
                        {
                            Id = 6,
                            CategoryID = 6,
                            InsertedDate = new DateTime(2021, 4, 9, 19, 59, 50, 972, DateTimeKind.Unspecified).AddTicks(3158),
                            Name = "Licensed Granite Salad",
                            Price = 52m,
                            Status = 1,
                            Stock = 175
                        },
                        new
                        {
                            Id = 7,
                            CategoryID = 2,
                            InsertedDate = new DateTime(2021, 9, 8, 4, 36, 13, 638, DateTimeKind.Unspecified).AddTicks(3840),
                            Name = "Small Granite Towels",
                            Price = 54m,
                            Status = 1,
                            Stock = 92
                        },
                        new
                        {
                            Id = 8,
                            CategoryID = 4,
                            InsertedDate = new DateTime(2020, 12, 14, 22, 55, 36, 148, DateTimeKind.Unspecified).AddTicks(8825),
                            Name = "Intelligent Metal Table",
                            Price = 54m,
                            Status = 1,
                            Stock = 151
                        },
                        new
                        {
                            Id = 9,
                            CategoryID = 6,
                            InsertedDate = new DateTime(2020, 6, 29, 18, 6, 55, 345, DateTimeKind.Unspecified).AddTicks(7842),
                            Name = "Awesome Metal Table",
                            Price = 56m,
                            Status = 1,
                            Stock = 144
                        },
                        new
                        {
                            Id = 10,
                            CategoryID = 3,
                            InsertedDate = new DateTime(2021, 2, 23, 20, 38, 4, 46, DateTimeKind.Unspecified).AddTicks(692),
                            Name = "Awesome Plastic Salad",
                            Price = 50m,
                            Status = 1,
                            Stock = 165
                        },
                        new
                        {
                            Id = 11,
                            CategoryID = 2,
                            InsertedDate = new DateTime(2021, 7, 30, 11, 1, 46, 235, DateTimeKind.Unspecified).AddTicks(7416),
                            Name = "Small Wooden Salad",
                            Price = 56m,
                            Status = 1,
                            Stock = 136
                        },
                        new
                        {
                            Id = 12,
                            CategoryID = 2,
                            InsertedDate = new DateTime(2020, 10, 13, 7, 23, 2, 80, DateTimeKind.Unspecified).AddTicks(7806),
                            Name = "Tasty Wooden Sausages",
                            Price = 52m,
                            Status = 1,
                            Stock = 63
                        },
                        new
                        {
                            Id = 13,
                            CategoryID = 2,
                            InsertedDate = new DateTime(2022, 12, 16, 0, 6, 10, 127, DateTimeKind.Unspecified).AddTicks(7452),
                            Name = "Generic Soft Bike",
                            Price = 55m,
                            Status = 1,
                            Stock = 63
                        },
                        new
                        {
                            Id = 14,
                            CategoryID = 5,
                            InsertedDate = new DateTime(2021, 11, 6, 12, 21, 41, 474, DateTimeKind.Unspecified).AddTicks(5943),
                            Name = "Tasty Soft Chicken",
                            Price = 49m,
                            Status = 1,
                            Stock = 65
                        },
                        new
                        {
                            Id = 15,
                            CategoryID = 1,
                            InsertedDate = new DateTime(2022, 5, 20, 12, 38, 35, 573, DateTimeKind.Unspecified).AddTicks(5312),
                            Name = "Incredible Steel Gloves",
                            Price = 52m,
                            Status = 1,
                            Stock = 109
                        },
                        new
                        {
                            Id = 16,
                            CategoryID = 6,
                            InsertedDate = new DateTime(2020, 10, 18, 16, 51, 36, 897, DateTimeKind.Unspecified).AddTicks(1466),
                            Name = "Tasty Plastic Sausages",
                            Price = 52m,
                            Status = 1,
                            Stock = 148
                        },
                        new
                        {
                            Id = 17,
                            CategoryID = 6,
                            InsertedDate = new DateTime(2021, 10, 26, 10, 10, 46, 441, DateTimeKind.Unspecified).AddTicks(9793),
                            Name = "Handmade Rubber Mouse",
                            Price = 57m,
                            Status = 1,
                            Stock = 143
                        },
                        new
                        {
                            Id = 18,
                            CategoryID = 1,
                            InsertedDate = new DateTime(2020, 12, 3, 14, 10, 39, 713, DateTimeKind.Unspecified).AddTicks(2174),
                            Name = "Small Fresh Tuna",
                            Price = 50m,
                            Status = 1,
                            Stock = 87
                        },
                        new
                        {
                            Id = 19,
                            CategoryID = 1,
                            InsertedDate = new DateTime(2020, 6, 18, 16, 33, 35, 248, DateTimeKind.Unspecified).AddTicks(7372),
                            Name = "Rustic Plastic Sausages",
                            Price = 54m,
                            Status = 1,
                            Stock = 190
                        },
                        new
                        {
                            Id = 20,
                            CategoryID = 3,
                            InsertedDate = new DateTime(2021, 7, 7, 15, 44, 38, 403, DateTimeKind.Unspecified).AddTicks(6760),
                            Name = "Generic Fresh Chair",
                            Price = 50m,
                            Status = 1,
                            Stock = 43
                        },
                        new
                        {
                            Id = 21,
                            CategoryID = 1,
                            InsertedDate = new DateTime(2021, 6, 27, 3, 4, 24, 374, DateTimeKind.Unspecified).AddTicks(9275),
                            Name = "Refined Metal Hat",
                            Price = 51m,
                            Status = 1,
                            Stock = 15
                        },
                        new
                        {
                            Id = 22,
                            CategoryID = 7,
                            InsertedDate = new DateTime(2020, 5, 13, 9, 39, 51, 147, DateTimeKind.Unspecified).AddTicks(4539),
                            Name = "Refined Plastic Mouse",
                            Price = 53m,
                            Status = 1,
                            Stock = 62
                        },
                        new
                        {
                            Id = 23,
                            CategoryID = 7,
                            InsertedDate = new DateTime(2021, 2, 25, 7, 54, 18, 162, DateTimeKind.Unspecified).AddTicks(4471),
                            Name = "Unbranded Fresh Hat",
                            Price = 56m,
                            Status = 1,
                            Stock = 44
                        },
                        new
                        {
                            Id = 24,
                            CategoryID = 4,
                            InsertedDate = new DateTime(2021, 4, 21, 7, 12, 13, 76, DateTimeKind.Unspecified).AddTicks(1437),
                            Name = "Tasty Soft Gloves",
                            Price = 54m,
                            Status = 1,
                            Stock = 48
                        },
                        new
                        {
                            Id = 25,
                            CategoryID = 4,
                            InsertedDate = new DateTime(2020, 12, 6, 3, 39, 4, 547, DateTimeKind.Unspecified).AddTicks(8750),
                            Name = "Practical Frozen Tuna",
                            Price = 50m,
                            Status = 1,
                            Stock = 39
                        },
                        new
                        {
                            Id = 26,
                            CategoryID = 5,
                            InsertedDate = new DateTime(2020, 8, 25, 16, 23, 42, 935, DateTimeKind.Unspecified).AddTicks(654),
                            Name = "Fantastic Rubber Car",
                            Price = 53m,
                            Status = 1,
                            Stock = 172
                        },
                        new
                        {
                            Id = 27,
                            CategoryID = 8,
                            InsertedDate = new DateTime(2020, 3, 19, 23, 50, 47, 881, DateTimeKind.Unspecified).AddTicks(9660),
                            Name = "Generic Soft Pants",
                            Price = 52m,
                            Status = 1,
                            Stock = 164
                        },
                        new
                        {
                            Id = 28,
                            CategoryID = 7,
                            InsertedDate = new DateTime(2020, 7, 11, 20, 3, 43, 204, DateTimeKind.Unspecified).AddTicks(2645),
                            Name = "Practical Frozen Bike",
                            Price = 53m,
                            Status = 1,
                            Stock = 162
                        },
                        new
                        {
                            Id = 29,
                            CategoryID = 1,
                            InsertedDate = new DateTime(2021, 3, 22, 1, 34, 19, 541, DateTimeKind.Unspecified).AddTicks(901),
                            Name = "Licensed Soft Computer",
                            Price = 57m,
                            Status = 1,
                            Stock = 171
                        },
                        new
                        {
                            Id = 30,
                            CategoryID = 2,
                            InsertedDate = new DateTime(2020, 7, 20, 20, 12, 23, 439, DateTimeKind.Unspecified).AddTicks(8781),
                            Name = "Generic Frozen Tuna",
                            Price = 50m,
                            Status = 1,
                            Stock = 47
                        });
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MadeIn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RelaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductFeatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InsertedDate = new DateTime(2021, 10, 21, 6, 54, 7, 616, DateTimeKind.Unspecified).AddTicks(7205),
                            MadeIn = "Bolivia",
                            RelaseDate = new DateTime(2022, 11, 11, 4, 55, 39, 467, DateTimeKind.Unspecified).AddTicks(3340),
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            InsertedDate = new DateTime(2021, 8, 27, 23, 10, 49, 365, DateTimeKind.Unspecified).AddTicks(4647),
                            MadeIn = "Brunei Darussalam",
                            RelaseDate = new DateTime(2021, 8, 20, 15, 1, 44, 49, DateTimeKind.Unspecified).AddTicks(9383),
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            InsertedDate = new DateTime(2020, 8, 15, 12, 24, 50, 938, DateTimeKind.Unspecified).AddTicks(611),
                            MadeIn = "Burundi",
                            RelaseDate = new DateTime(2022, 9, 28, 14, 12, 33, 717, DateTimeKind.Unspecified).AddTicks(7002),
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            InsertedDate = new DateTime(2021, 2, 8, 3, 28, 57, 467, DateTimeKind.Unspecified).AddTicks(7147),
                            MadeIn = "Palestinian Territory",
                            RelaseDate = new DateTime(2021, 11, 14, 2, 32, 14, 330, DateTimeKind.Unspecified).AddTicks(9351),
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            InsertedDate = new DateTime(2022, 7, 6, 1, 43, 37, 365, DateTimeKind.Unspecified).AddTicks(6333),
                            MadeIn = "Bermuda",
                            RelaseDate = new DateTime(2022, 5, 28, 18, 14, 22, 952, DateTimeKind.Unspecified).AddTicks(4725),
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            InsertedDate = new DateTime(2021, 7, 20, 2, 19, 21, 927, DateTimeKind.Unspecified).AddTicks(6517),
                            MadeIn = "Macao",
                            RelaseDate = new DateTime(2021, 7, 7, 13, 9, 10, 454, DateTimeKind.Unspecified).AddTicks(7673),
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            InsertedDate = new DateTime(2020, 6, 27, 3, 24, 9, 656, DateTimeKind.Unspecified).AddTicks(4162),
                            MadeIn = "Cote d'Ivoire",
                            RelaseDate = new DateTime(2021, 3, 15, 12, 49, 28, 952, DateTimeKind.Unspecified).AddTicks(1138),
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            InsertedDate = new DateTime(2022, 10, 30, 22, 11, 9, 143, DateTimeKind.Unspecified).AddTicks(1729),
                            MadeIn = "Uganda",
                            RelaseDate = new DateTime(2021, 9, 24, 14, 2, 21, 35, DateTimeKind.Unspecified).AddTicks(1372),
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            InsertedDate = new DateTime(2020, 3, 23, 1, 6, 22, 523, DateTimeKind.Unspecified).AddTicks(1899),
                            MadeIn = "Panama",
                            RelaseDate = new DateTime(2021, 7, 18, 17, 12, 36, 146, DateTimeKind.Unspecified).AddTicks(5982),
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            InsertedDate = new DateTime(2020, 11, 30, 9, 31, 48, 503, DateTimeKind.Unspecified).AddTicks(6458),
                            MadeIn = "South Georgia and the South Sandwich Islands",
                            RelaseDate = new DateTime(2022, 11, 25, 18, 3, 57, 642, DateTimeKind.Unspecified).AddTicks(9254),
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            InsertedDate = new DateTime(2022, 1, 1, 9, 1, 41, 81, DateTimeKind.Unspecified).AddTicks(2113),
                            MadeIn = "Comoros",
                            RelaseDate = new DateTime(2022, 6, 10, 2, 43, 26, 798, DateTimeKind.Unspecified).AddTicks(9967),
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            InsertedDate = new DateTime(2022, 9, 16, 10, 21, 18, 725, DateTimeKind.Unspecified).AddTicks(8648),
                            MadeIn = "Holy See (Vatican City State)",
                            RelaseDate = new DateTime(2022, 2, 3, 21, 2, 44, 763, DateTimeKind.Unspecified).AddTicks(3986),
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            InsertedDate = new DateTime(2022, 9, 13, 22, 12, 42, 845, DateTimeKind.Unspecified).AddTicks(3643),
                            MadeIn = "French Polynesia",
                            RelaseDate = new DateTime(2020, 5, 9, 10, 35, 27, 842, DateTimeKind.Unspecified).AddTicks(1919),
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            InsertedDate = new DateTime(2021, 10, 22, 16, 29, 48, 923, DateTimeKind.Unspecified).AddTicks(2259),
                            MadeIn = "Hong Kong",
                            RelaseDate = new DateTime(2022, 3, 12, 9, 13, 6, 875, DateTimeKind.Unspecified).AddTicks(7235),
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            InsertedDate = new DateTime(2021, 7, 27, 1, 31, 36, 984, DateTimeKind.Unspecified).AddTicks(3177),
                            MadeIn = "Namibia",
                            RelaseDate = new DateTime(2021, 2, 9, 22, 16, 55, 859, DateTimeKind.Unspecified).AddTicks(2855),
                            Status = 1
                        },
                        new
                        {
                            Id = 16,
                            InsertedDate = new DateTime(2021, 6, 29, 7, 58, 15, 750, DateTimeKind.Unspecified).AddTicks(3978),
                            MadeIn = "Albania",
                            RelaseDate = new DateTime(2022, 4, 1, 0, 20, 38, 682, DateTimeKind.Unspecified).AddTicks(2132),
                            Status = 1
                        },
                        new
                        {
                            Id = 17,
                            InsertedDate = new DateTime(2022, 1, 24, 16, 56, 38, 371, DateTimeKind.Unspecified).AddTicks(505),
                            MadeIn = "Guernsey",
                            RelaseDate = new DateTime(2021, 1, 13, 6, 5, 49, 141, DateTimeKind.Unspecified).AddTicks(3147),
                            Status = 1
                        },
                        new
                        {
                            Id = 18,
                            InsertedDate = new DateTime(2022, 11, 11, 14, 26, 18, 203, DateTimeKind.Unspecified).AddTicks(8081),
                            MadeIn = "United States of America",
                            RelaseDate = new DateTime(2022, 10, 18, 6, 58, 25, 123, DateTimeKind.Unspecified).AddTicks(1092),
                            Status = 1
                        },
                        new
                        {
                            Id = 19,
                            InsertedDate = new DateTime(2020, 6, 27, 23, 49, 11, 662, DateTimeKind.Unspecified).AddTicks(5507),
                            MadeIn = "Indonesia",
                            RelaseDate = new DateTime(2021, 7, 31, 11, 54, 37, 351, DateTimeKind.Unspecified).AddTicks(2210),
                            Status = 1
                        },
                        new
                        {
                            Id = 20,
                            InsertedDate = new DateTime(2020, 3, 30, 12, 46, 13, 341, DateTimeKind.Unspecified).AddTicks(8502),
                            MadeIn = "Pakistan",
                            RelaseDate = new DateTime(2021, 11, 19, 4, 16, 25, 849, DateTimeKind.Unspecified).AddTicks(3471),
                            Status = 1
                        },
                        new
                        {
                            Id = 21,
                            InsertedDate = new DateTime(2022, 8, 23, 22, 24, 12, 594, DateTimeKind.Unspecified).AddTicks(4566),
                            MadeIn = "Lao People's Democratic Republic",
                            RelaseDate = new DateTime(2020, 8, 3, 20, 48, 8, 340, DateTimeKind.Unspecified).AddTicks(5126),
                            Status = 1
                        },
                        new
                        {
                            Id = 22,
                            InsertedDate = new DateTime(2022, 12, 20, 23, 23, 23, 977, DateTimeKind.Unspecified).AddTicks(5284),
                            MadeIn = "Papua New Guinea",
                            RelaseDate = new DateTime(2021, 2, 7, 9, 14, 39, 115, DateTimeKind.Unspecified).AddTicks(8533),
                            Status = 1
                        },
                        new
                        {
                            Id = 23,
                            InsertedDate = new DateTime(2020, 3, 30, 23, 15, 10, 145, DateTimeKind.Unspecified).AddTicks(9696),
                            MadeIn = "Ethiopia",
                            RelaseDate = new DateTime(2021, 6, 30, 1, 26, 42, 593, DateTimeKind.Unspecified).AddTicks(6045),
                            Status = 1
                        },
                        new
                        {
                            Id = 24,
                            InsertedDate = new DateTime(2021, 3, 15, 10, 49, 52, 255, DateTimeKind.Unspecified).AddTicks(3151),
                            MadeIn = "Nepal",
                            RelaseDate = new DateTime(2022, 5, 10, 4, 54, 57, 54, DateTimeKind.Unspecified).AddTicks(1101),
                            Status = 1
                        },
                        new
                        {
                            Id = 25,
                            InsertedDate = new DateTime(2020, 9, 18, 3, 18, 49, 492, DateTimeKind.Unspecified).AddTicks(7712),
                            MadeIn = "Romania",
                            RelaseDate = new DateTime(2021, 11, 21, 11, 32, 41, 262, DateTimeKind.Unspecified).AddTicks(7394),
                            Status = 1
                        },
                        new
                        {
                            Id = 26,
                            InsertedDate = new DateTime(2022, 2, 19, 21, 38, 19, 543, DateTimeKind.Unspecified).AddTicks(4404),
                            MadeIn = "Namibia",
                            RelaseDate = new DateTime(2020, 8, 20, 11, 31, 59, 47, DateTimeKind.Unspecified).AddTicks(6438),
                            Status = 1
                        },
                        new
                        {
                            Id = 27,
                            InsertedDate = new DateTime(2021, 5, 30, 3, 29, 3, 551, DateTimeKind.Unspecified).AddTicks(4986),
                            MadeIn = "Hungary",
                            RelaseDate = new DateTime(2021, 10, 18, 23, 7, 4, 741, DateTimeKind.Unspecified).AddTicks(5680),
                            Status = 1
                        },
                        new
                        {
                            Id = 28,
                            InsertedDate = new DateTime(2022, 4, 20, 19, 4, 27, 939, DateTimeKind.Unspecified).AddTicks(3004),
                            MadeIn = "Haiti",
                            RelaseDate = new DateTime(2020, 12, 11, 10, 28, 35, 407, DateTimeKind.Unspecified).AddTicks(6090),
                            Status = 1
                        },
                        new
                        {
                            Id = 29,
                            InsertedDate = new DateTime(2022, 6, 10, 9, 16, 43, 33, DateTimeKind.Unspecified).AddTicks(9932),
                            MadeIn = "Uruguay",
                            RelaseDate = new DateTime(2022, 11, 15, 0, 19, 29, 397, DateTimeKind.Unspecified).AddTicks(634),
                            Status = 1
                        },
                        new
                        {
                            Id = 30,
                            InsertedDate = new DateTime(2021, 4, 7, 15, 3, 55, 369, DateTimeKind.Unspecified).AddTicks(4180),
                            MadeIn = "Japan",
                            RelaseDate = new DateTime(2023, 1, 1, 16, 16, 40, 522, DateTimeKind.Unspecified).AddTicks(5593),
                            Status = 1
                        });
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.ProductSupplier", b =>
                {
                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxCountPerShipping")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ProductID", "SupplierID");

                    b.HasIndex("SupplierID");

                    b.ToTable("ProductsSuppliers");

                    b.HasData(
                        new
                        {
                            ProductID = 26,
                            SupplierID = 4,
                            InsertedDate = new DateTime(2020, 6, 4, 22, 38, 51, 511, DateTimeKind.Unspecified).AddTicks(2645),
                            MaxCountPerShipping = 57,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 8,
                            SupplierID = 1,
                            InsertedDate = new DateTime(2022, 5, 27, 5, 2, 52, 155, DateTimeKind.Unspecified).AddTicks(6589),
                            MaxCountPerShipping = 103,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 3,
                            SupplierID = 4,
                            InsertedDate = new DateTime(2021, 6, 28, 13, 43, 52, 666, DateTimeKind.Unspecified).AddTicks(7135),
                            MaxCountPerShipping = 130,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 15,
                            SupplierID = 2,
                            InsertedDate = new DateTime(2022, 8, 11, 16, 23, 1, 735, DateTimeKind.Unspecified).AddTicks(1411),
                            MaxCountPerShipping = 54,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 20,
                            SupplierID = 8,
                            InsertedDate = new DateTime(2022, 11, 26, 16, 13, 54, 501, DateTimeKind.Unspecified).AddTicks(3264),
                            MaxCountPerShipping = 155,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 23,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2022, 10, 3, 10, 7, 2, 394, DateTimeKind.Unspecified).AddTicks(2712),
                            MaxCountPerShipping = 28,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 27,
                            SupplierID = 3,
                            InsertedDate = new DateTime(2022, 4, 13, 13, 30, 41, 698, DateTimeKind.Unspecified).AddTicks(1978),
                            MaxCountPerShipping = 200,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 5,
                            SupplierID = 10,
                            InsertedDate = new DateTime(2022, 2, 7, 11, 48, 2, 756, DateTimeKind.Unspecified).AddTicks(1421),
                            MaxCountPerShipping = 197,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 7,
                            SupplierID = 6,
                            InsertedDate = new DateTime(2023, 1, 1, 23, 41, 38, 70, DateTimeKind.Unspecified).AddTicks(7009),
                            MaxCountPerShipping = 24,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 5,
                            SupplierID = 7,
                            InsertedDate = new DateTime(2021, 5, 13, 0, 51, 45, 167, DateTimeKind.Unspecified).AddTicks(5046),
                            MaxCountPerShipping = 111,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 25,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2021, 6, 23, 10, 22, 4, 29, DateTimeKind.Unspecified).AddTicks(7664),
                            MaxCountPerShipping = 176,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 25,
                            SupplierID = 1,
                            InsertedDate = new DateTime(2021, 8, 22, 7, 50, 49, 419, DateTimeKind.Unspecified).AddTicks(1894),
                            MaxCountPerShipping = 16,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 8,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2021, 7, 28, 0, 15, 12, 692, DateTimeKind.Unspecified).AddTicks(5560),
                            MaxCountPerShipping = 59,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 22,
                            SupplierID = 3,
                            InsertedDate = new DateTime(2020, 5, 18, 18, 42, 46, 151, DateTimeKind.Unspecified).AddTicks(4895),
                            MaxCountPerShipping = 151,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 9,
                            SupplierID = 10,
                            InsertedDate = new DateTime(2021, 4, 29, 3, 27, 38, 851, DateTimeKind.Unspecified).AddTicks(7356),
                            MaxCountPerShipping = 32,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 25,
                            SupplierID = 7,
                            InsertedDate = new DateTime(2022, 12, 10, 22, 6, 16, 361, DateTimeKind.Unspecified).AddTicks(2285),
                            MaxCountPerShipping = 139,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 24,
                            SupplierID = 4,
                            InsertedDate = new DateTime(2020, 11, 19, 21, 14, 18, 520, DateTimeKind.Unspecified).AddTicks(823),
                            MaxCountPerShipping = 77,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 25,
                            SupplierID = 6,
                            InsertedDate = new DateTime(2021, 8, 5, 0, 1, 49, 818, DateTimeKind.Unspecified).AddTicks(2616),
                            MaxCountPerShipping = 21,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 25,
                            SupplierID = 8,
                            InsertedDate = new DateTime(2021, 12, 11, 4, 23, 16, 310, DateTimeKind.Unspecified).AddTicks(7576),
                            MaxCountPerShipping = 96,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 2,
                            SupplierID = 8,
                            InsertedDate = new DateTime(2021, 8, 6, 15, 48, 0, 28, DateTimeKind.Unspecified).AddTicks(692),
                            MaxCountPerShipping = 185,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 10,
                            SupplierID = 9,
                            InsertedDate = new DateTime(2021, 9, 5, 22, 45, 51, 199, DateTimeKind.Unspecified).AddTicks(7865),
                            MaxCountPerShipping = 115,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 6,
                            SupplierID = 3,
                            InsertedDate = new DateTime(2021, 2, 9, 19, 52, 51, 560, DateTimeKind.Unspecified).AddTicks(6353),
                            MaxCountPerShipping = 6,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 17,
                            SupplierID = 1,
                            InsertedDate = new DateTime(2022, 6, 9, 10, 6, 19, 201, DateTimeKind.Unspecified).AddTicks(1757),
                            MaxCountPerShipping = 49,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 21,
                            SupplierID = 8,
                            InsertedDate = new DateTime(2021, 8, 29, 7, 22, 27, 325, DateTimeKind.Unspecified).AddTicks(4376),
                            MaxCountPerShipping = 181,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 24,
                            SupplierID = 2,
                            InsertedDate = new DateTime(2020, 6, 26, 21, 34, 46, 932, DateTimeKind.Unspecified).AddTicks(192),
                            MaxCountPerShipping = 98,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 13,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2020, 4, 5, 20, 39, 17, 496, DateTimeKind.Unspecified).AddTicks(9867),
                            MaxCountPerShipping = 10,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 28,
                            SupplierID = 2,
                            InsertedDate = new DateTime(2021, 3, 5, 0, 10, 28, 322, DateTimeKind.Unspecified).AddTicks(476),
                            MaxCountPerShipping = 39,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 28,
                            SupplierID = 3,
                            InsertedDate = new DateTime(2022, 2, 12, 1, 55, 10, 72, DateTimeKind.Unspecified).AddTicks(1990),
                            MaxCountPerShipping = 182,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 25,
                            SupplierID = 10,
                            InsertedDate = new DateTime(2021, 5, 13, 12, 12, 52, 581, DateTimeKind.Unspecified).AddTicks(6771),
                            MaxCountPerShipping = 22,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 14,
                            SupplierID = 10,
                            InsertedDate = new DateTime(2020, 11, 1, 7, 14, 33, 614, DateTimeKind.Unspecified).AddTicks(5222),
                            MaxCountPerShipping = 157,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 17,
                            SupplierID = 9,
                            InsertedDate = new DateTime(2022, 6, 23, 8, 44, 32, 94, DateTimeKind.Unspecified).AddTicks(717),
                            MaxCountPerShipping = 34,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 23,
                            SupplierID = 9,
                            InsertedDate = new DateTime(2022, 1, 30, 4, 24, 30, 810, DateTimeKind.Unspecified).AddTicks(8056),
                            MaxCountPerShipping = 25,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 20,
                            SupplierID = 7,
                            InsertedDate = new DateTime(2022, 5, 27, 15, 29, 33, 630, DateTimeKind.Unspecified).AddTicks(8934),
                            MaxCountPerShipping = 98,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 7,
                            SupplierID = 8,
                            InsertedDate = new DateTime(2021, 10, 10, 9, 18, 56, 847, DateTimeKind.Unspecified).AddTicks(738),
                            MaxCountPerShipping = 138,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 28,
                            SupplierID = 4,
                            InsertedDate = new DateTime(2020, 9, 11, 7, 36, 42, 129, DateTimeKind.Unspecified).AddTicks(5903),
                            MaxCountPerShipping = 170,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 22,
                            SupplierID = 8,
                            InsertedDate = new DateTime(2022, 10, 30, 23, 54, 16, 462, DateTimeKind.Unspecified).AddTicks(3757),
                            MaxCountPerShipping = 144,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 15,
                            SupplierID = 8,
                            InsertedDate = new DateTime(2022, 6, 23, 23, 17, 40, 613, DateTimeKind.Unspecified).AddTicks(4930),
                            MaxCountPerShipping = 157,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 28,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2021, 9, 20, 20, 46, 0, 60, DateTimeKind.Unspecified).AddTicks(4099),
                            MaxCountPerShipping = 75,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 18,
                            SupplierID = 8,
                            InsertedDate = new DateTime(2022, 4, 21, 22, 49, 33, 48, DateTimeKind.Unspecified).AddTicks(6034),
                            MaxCountPerShipping = 63,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 12,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2022, 10, 2, 21, 2, 1, 307, DateTimeKind.Unspecified).AddTicks(11),
                            MaxCountPerShipping = 111,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 2,
                            SupplierID = 10,
                            InsertedDate = new DateTime(2022, 2, 13, 19, 16, 57, 93, DateTimeKind.Unspecified).AddTicks(7645),
                            MaxCountPerShipping = 179,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 19,
                            SupplierID = 4,
                            InsertedDate = new DateTime(2021, 3, 6, 17, 45, 15, 624, DateTimeKind.Unspecified).AddTicks(4233),
                            MaxCountPerShipping = 72,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 1,
                            SupplierID = 1,
                            InsertedDate = new DateTime(2022, 12, 18, 15, 26, 14, 221, DateTimeKind.Unspecified).AddTicks(5135),
                            MaxCountPerShipping = 188,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 30,
                            SupplierID = 7,
                            InsertedDate = new DateTime(2022, 10, 5, 13, 55, 1, 860, DateTimeKind.Unspecified).AddTicks(6505),
                            MaxCountPerShipping = 85,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 4,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2020, 11, 9, 16, 32, 40, 277, DateTimeKind.Unspecified).AddTicks(1718),
                            MaxCountPerShipping = 47,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 7,
                            SupplierID = 7,
                            InsertedDate = new DateTime(2021, 8, 2, 21, 26, 50, 286, DateTimeKind.Unspecified).AddTicks(2178),
                            MaxCountPerShipping = 50,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 11,
                            SupplierID = 2,
                            InsertedDate = new DateTime(2022, 3, 2, 7, 45, 42, 98, DateTimeKind.Unspecified).AddTicks(132),
                            MaxCountPerShipping = 164,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 14,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2022, 9, 26, 17, 49, 14, 923, DateTimeKind.Unspecified).AddTicks(385),
                            MaxCountPerShipping = 144,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 19,
                            SupplierID = 10,
                            InsertedDate = new DateTime(2023, 1, 1, 17, 15, 31, 576, DateTimeKind.Unspecified).AddTicks(9556),
                            MaxCountPerShipping = 31,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 20,
                            SupplierID = 10,
                            InsertedDate = new DateTime(2022, 3, 17, 18, 38, 40, 722, DateTimeKind.Unspecified).AddTicks(1743),
                            MaxCountPerShipping = 76,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 26,
                            SupplierID = 2,
                            InsertedDate = new DateTime(2020, 9, 19, 10, 5, 25, 106, DateTimeKind.Unspecified).AddTicks(2393),
                            MaxCountPerShipping = 91,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 20,
                            SupplierID = 6,
                            InsertedDate = new DateTime(2021, 2, 24, 1, 44, 8, 54, DateTimeKind.Unspecified).AddTicks(4128),
                            MaxCountPerShipping = 172,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 3,
                            SupplierID = 10,
                            InsertedDate = new DateTime(2020, 4, 20, 15, 16, 24, 80, DateTimeKind.Unspecified).AddTicks(7024),
                            MaxCountPerShipping = 24,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 10,
                            SupplierID = 2,
                            InsertedDate = new DateTime(2022, 8, 23, 0, 33, 57, 72, DateTimeKind.Unspecified).AddTicks(446),
                            MaxCountPerShipping = 83,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 3,
                            SupplierID = 6,
                            InsertedDate = new DateTime(2022, 2, 10, 16, 36, 24, 763, DateTimeKind.Unspecified).AddTicks(5536),
                            MaxCountPerShipping = 106,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 29,
                            SupplierID = 10,
                            InsertedDate = new DateTime(2022, 10, 27, 11, 39, 11, 55, DateTimeKind.Unspecified).AddTicks(8954),
                            MaxCountPerShipping = 65,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 16,
                            SupplierID = 10,
                            InsertedDate = new DateTime(2022, 8, 18, 9, 28, 20, 739, DateTimeKind.Unspecified).AddTicks(5848),
                            MaxCountPerShipping = 13,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 8,
                            SupplierID = 4,
                            InsertedDate = new DateTime(2020, 10, 3, 14, 21, 3, 592, DateTimeKind.Unspecified).AddTicks(4255),
                            MaxCountPerShipping = 115,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 14,
                            SupplierID = 1,
                            InsertedDate = new DateTime(2020, 12, 14, 19, 25, 32, 830, DateTimeKind.Unspecified).AddTicks(4902),
                            MaxCountPerShipping = 134,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 30,
                            SupplierID = 2,
                            InsertedDate = new DateTime(2021, 10, 13, 4, 10, 4, 973, DateTimeKind.Unspecified).AddTicks(2908),
                            MaxCountPerShipping = 91,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 18,
                            SupplierID = 1,
                            InsertedDate = new DateTime(2020, 10, 14, 3, 32, 54, 504, DateTimeKind.Unspecified).AddTicks(8960),
                            MaxCountPerShipping = 18,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 22,
                            SupplierID = 9,
                            InsertedDate = new DateTime(2021, 3, 21, 15, 28, 52, 892, DateTimeKind.Unspecified).AddTicks(57),
                            MaxCountPerShipping = 187,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 19,
                            SupplierID = 8,
                            InsertedDate = new DateTime(2022, 11, 3, 3, 25, 1, 712, DateTimeKind.Unspecified).AddTicks(5536),
                            MaxCountPerShipping = 7,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 28,
                            SupplierID = 9,
                            InsertedDate = new DateTime(2021, 6, 7, 0, 40, 37, 246, DateTimeKind.Unspecified).AddTicks(5157),
                            MaxCountPerShipping = 5,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 15,
                            SupplierID = 6,
                            InsertedDate = new DateTime(2022, 1, 13, 8, 7, 2, 22, DateTimeKind.Unspecified).AddTicks(8613),
                            MaxCountPerShipping = 18,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 3,
                            SupplierID = 9,
                            InsertedDate = new DateTime(2020, 12, 31, 5, 50, 25, 946, DateTimeKind.Unspecified).AddTicks(803),
                            MaxCountPerShipping = 128,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 11,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2021, 12, 13, 7, 24, 29, 242, DateTimeKind.Unspecified).AddTicks(3368),
                            MaxCountPerShipping = 196,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 3,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2022, 12, 5, 17, 38, 2, 503, DateTimeKind.Unspecified).AddTicks(826),
                            MaxCountPerShipping = 40,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 23,
                            SupplierID = 4,
                            InsertedDate = new DateTime(2022, 11, 12, 11, 52, 21, 892, DateTimeKind.Unspecified).AddTicks(7099),
                            MaxCountPerShipping = 24,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 15,
                            SupplierID = 10,
                            InsertedDate = new DateTime(2020, 5, 25, 0, 38, 8, 923, DateTimeKind.Unspecified).AddTicks(2967),
                            MaxCountPerShipping = 194,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 28,
                            SupplierID = 8,
                            InsertedDate = new DateTime(2020, 6, 13, 4, 35, 18, 402, DateTimeKind.Unspecified).AddTicks(1139),
                            MaxCountPerShipping = 81,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 5,
                            SupplierID = 8,
                            InsertedDate = new DateTime(2020, 3, 14, 6, 38, 4, 42, DateTimeKind.Unspecified).AddTicks(7739),
                            MaxCountPerShipping = 112,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 13,
                            SupplierID = 9,
                            InsertedDate = new DateTime(2020, 9, 7, 15, 30, 11, 208, DateTimeKind.Unspecified).AddTicks(3581),
                            MaxCountPerShipping = 171,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 8,
                            SupplierID = 10,
                            InsertedDate = new DateTime(2022, 9, 5, 8, 16, 23, 128, DateTimeKind.Unspecified).AddTicks(1539),
                            MaxCountPerShipping = 96,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 3,
                            SupplierID = 7,
                            InsertedDate = new DateTime(2022, 11, 26, 16, 37, 40, 267, DateTimeKind.Unspecified).AddTicks(9747),
                            MaxCountPerShipping = 49,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 29,
                            SupplierID = 1,
                            InsertedDate = new DateTime(2021, 12, 23, 21, 0, 10, 762, DateTimeKind.Unspecified).AddTicks(6555),
                            MaxCountPerShipping = 79,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 22,
                            SupplierID = 2,
                            InsertedDate = new DateTime(2020, 11, 29, 8, 15, 12, 602, DateTimeKind.Unspecified).AddTicks(5696),
                            MaxCountPerShipping = 141,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 16,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2020, 8, 19, 1, 36, 58, 278, DateTimeKind.Unspecified).AddTicks(1062),
                            MaxCountPerShipping = 148,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 24,
                            SupplierID = 9,
                            InsertedDate = new DateTime(2020, 6, 18, 22, 15, 2, 953, DateTimeKind.Unspecified).AddTicks(4382),
                            MaxCountPerShipping = 75,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 1,
                            SupplierID = 4,
                            InsertedDate = new DateTime(2020, 12, 16, 11, 11, 0, 69, DateTimeKind.Unspecified).AddTicks(9744),
                            MaxCountPerShipping = 15,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 7,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2022, 5, 24, 6, 3, 17, 208, DateTimeKind.Unspecified).AddTicks(7950),
                            MaxCountPerShipping = 124,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 11,
                            SupplierID = 6,
                            InsertedDate = new DateTime(2021, 11, 14, 22, 27, 40, 650, DateTimeKind.Unspecified).AddTicks(973),
                            MaxCountPerShipping = 94,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 20,
                            SupplierID = 2,
                            InsertedDate = new DateTime(2022, 10, 1, 17, 57, 31, 66, DateTimeKind.Unspecified).AddTicks(3259),
                            MaxCountPerShipping = 42,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 10,
                            SupplierID = 6,
                            InsertedDate = new DateTime(2021, 11, 29, 16, 30, 16, 582, DateTimeKind.Unspecified).AddTicks(252),
                            MaxCountPerShipping = 141,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 9,
                            SupplierID = 1,
                            InsertedDate = new DateTime(2020, 5, 20, 21, 42, 51, 65, DateTimeKind.Unspecified).AddTicks(9412),
                            MaxCountPerShipping = 60,
                            Status = 1
                        });
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "58918 Micheal Junctions, Port Carloside, France",
                            CompanyName = "Mayert, Volkman and Jast",
                            InsertedDate = new DateTime(2021, 10, 5, 21, 39, 20, 723, DateTimeKind.Unspecified).AddTicks(4561),
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "05352 Huel Bridge, McKenziehaven, Tuvalu",
                            CompanyName = "Lesch and Sons",
                            InsertedDate = new DateTime(2022, 6, 23, 13, 23, 51, 255, DateTimeKind.Unspecified).AddTicks(2440),
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = "3252 Sonny Grove, Sauermouth, Sierra Leone",
                            CompanyName = "Ward LLC",
                            InsertedDate = new DateTime(2021, 4, 8, 23, 49, 14, 378, DateTimeKind.Unspecified).AddTicks(1426),
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            Address = "49046 Nicholas Cape, Laneshire, Oman",
                            CompanyName = "Keeling Group",
                            InsertedDate = new DateTime(2021, 10, 13, 8, 20, 49, 493, DateTimeKind.Unspecified).AddTicks(7565),
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            Address = "07074 Keeling Rest, Gissellefort, Solomon Islands",
                            CompanyName = "Wiza - Bartoletti",
                            InsertedDate = new DateTime(2022, 12, 17, 2, 49, 1, 47, DateTimeKind.Unspecified).AddTicks(3407),
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            Address = "59662 Lorenza Orchard, Adonisside, Kazakhstan",
                            CompanyName = "Dicki, Wolff and Fadel",
                            InsertedDate = new DateTime(2022, 5, 28, 0, 11, 30, 619, DateTimeKind.Unspecified).AddTicks(8577),
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            Address = "3105 Gregoria Rapids, South Bianka, Jordan",
                            CompanyName = "Mueller and Sons",
                            InsertedDate = new DateTime(2022, 7, 22, 17, 16, 0, 883, DateTimeKind.Unspecified).AddTicks(5654),
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            Address = "39380 Hills Passage, North Elmira, Cocos (Keeling) Islands",
                            CompanyName = "Marvin LLC",
                            InsertedDate = new DateTime(2021, 7, 23, 7, 55, 54, 16, DateTimeKind.Unspecified).AddTicks(6026),
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            Address = "1698 Reagan Field, Goodwinton, Pitcairn Islands",
                            CompanyName = "Weimann - Wuckert",
                            InsertedDate = new DateTime(2020, 5, 10, 15, 1, 8, 433, DateTimeKind.Unspecified).AddTicks(9986),
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            Address = "2108 Ernser Hollow, Finnport, Albania",
                            CompanyName = "Green, Pouros and Lesch",
                            InsertedDate = new DateTime(2020, 12, 28, 2, 25, 56, 431, DateTimeKind.Unspecified).AddTicks(9187),
                            Status = 1
                        });
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppRoleClaim", b =>
                {
                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppUserClaim", b =>
                {
                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppUserLogin", b =>
                {
                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppUserRole", b =>
                {
                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppUserToken", b =>
                {
                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.Category", b =>
                {
                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.Category", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.Product", b =>
                {
                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.ProductFeature", b =>
                {
                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.Product", "Product")
                        .WithOne("ProductFeature")
                        .HasForeignKey("TrueOnion.DOMAIN.Entities.Concrates.ProductFeature", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.ProductSupplier", b =>
                {
                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.Product", "Product")
                        .WithMany("ProductSuppliers")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.Supplier", "Supplier")
                        .WithMany("ProductSuppliers")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.Category", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.Product", b =>
                {
                    b.Navigation("ProductFeature")
                        .IsRequired();

                    b.Navigation("ProductSuppliers");
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.Supplier", b =>
                {
                    b.Navigation("ProductSuppliers");
                });
#pragma warning restore 612, 618
        }
    }
}
