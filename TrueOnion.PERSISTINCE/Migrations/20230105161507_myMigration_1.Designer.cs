// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrueOnion.PERSISTINCE.Context;

#nullable disable

namespace TrueOnion.PERSISTINCE.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230105161507_myMigration_1")]
    partial class myMigration1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("DataStatus");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InsertedDate = new DateTime(2023, 1, 5, 19, 15, 7, 375, DateTimeKind.Local).AddTicks(2758),
                            Name = "Admin",
                            NormalizedName = "ADMIN",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            InsertedDate = new DateTime(2023, 1, 5, 19, 15, 7, 375, DateTimeKind.Local).AddTicks(2956),
                            Name = "Member",
                            NormalizedName = "MEMBER",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            InsertedDate = new DateTime(2023, 1, 5, 19, 15, 7, 375, DateTimeKind.Local).AddTicks(2960),
                            Name = "Supplier",
                            NormalizedName = "SUPPLIER",
                            Status = 1
                        });
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("DataStatus");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7ca3903f-ad04-43ef-8a91-1f01ad545321",
                            Email = "Kamryn87@hotmail.com",
                            EmailConfirmed = true,
                            InsertedDate = new DateTime(2021, 9, 5, 1, 11, 38, 219, DateTimeKind.Unspecified).AddTicks(3409),
                            LockoutEnabled = false,
                            NormalizedEmail = "KAMRYN87@HOTMAIL.COM",
                            NormalizedUserName = "TYREEK.NIKOLAUS",
                            PasswordHash = "fKz5tVHheS",
                            PhoneNumber = "818-940-8966",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "JEKZ0wcUMq",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "Tyreek.Nikolaus"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "73df970a-09e4-4fbf-8463-85c5b26944c6",
                            Email = "Erika.Corwin@hotmail.com",
                            EmailConfirmed = true,
                            InsertedDate = new DateTime(2021, 4, 2, 18, 30, 10, 973, DateTimeKind.Unspecified).AddTicks(1255),
                            LockoutEnabled = false,
                            NormalizedEmail = "ERIKA.CORWIN@HOTMAIL.COM",
                            NormalizedUserName = "AMPARO_BOGAN",
                            PasswordHash = "bsc2_cCCHC",
                            PhoneNumber = "1-333-248-2524",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "yKH7Cm2EDJ",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "Amparo_Bogan"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "75689ae1-c57e-4f83-9262-cc78dcda5910",
                            Email = "Percy_Daugherty@gmail.com",
                            EmailConfirmed = true,
                            InsertedDate = new DateTime(2021, 3, 11, 0, 11, 48, 589, DateTimeKind.Unspecified).AddTicks(5760),
                            LockoutEnabled = false,
                            NormalizedEmail = "PERCY_DAUGHERTY@GMAIL.COM",
                            NormalizedUserName = "BERNARD55",
                            PasswordHash = "r7f_fhCqJj",
                            PhoneNumber = "446.228.6999",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "rrOAJ6Dkha",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "Bernard55"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "334af678-7b5f-44f3-9fc4-c84a272d5b3d",
                            Email = "Sarah_Predovic@gmail.com",
                            EmailConfirmed = true,
                            InsertedDate = new DateTime(2020, 10, 17, 20, 40, 21, 482, DateTimeKind.Unspecified).AddTicks(432),
                            LockoutEnabled = false,
                            NormalizedEmail = "SARAH_PREDOVIC@GMAIL.COM",
                            NormalizedUserName = "RYLEY_MOSCISKI",
                            PasswordHash = "dDU7jMCjzb",
                            PhoneNumber = "1-336-588-0418",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "dA0Dqd1aSz",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "Ryley_Mosciski"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "47725fc9-d5af-4e65-bd61-9ace27f6dcf9",
                            Email = "Annabell.Block@yahoo.com",
                            EmailConfirmed = true,
                            InsertedDate = new DateTime(2021, 9, 28, 10, 6, 40, 861, DateTimeKind.Unspecified).AddTicks(906),
                            LockoutEnabled = false,
                            NormalizedEmail = "ANNABELL.BLOCK@YAHOO.COM",
                            NormalizedUserName = "ALEXANNE_LEHNER",
                            PasswordHash = "vibp8kuxyn",
                            PhoneNumber = "494.917.2830 x380",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "yItlF2tESf",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "Alexanne_Lehner"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a81d0249-ea0f-4101-bcf3-d06bedd41251",
                            Email = "Ida.Davis@hotmail.com",
                            EmailConfirmed = true,
                            InsertedDate = new DateTime(2022, 9, 16, 4, 36, 59, 549, DateTimeKind.Unspecified).AddTicks(290),
                            LockoutEnabled = false,
                            NormalizedEmail = "IDA.DAVIS@HOTMAIL.COM",
                            NormalizedUserName = "RYLAN.ZULAUF14",
                            PasswordHash = "zYnmp24GQH",
                            PhoneNumber = "326-502-9030 x82889",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "HPClFYCAQG",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "Rylan.Zulauf14"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c1925167-6c3c-4964-90b1-09597697dfc6",
                            Email = "Fredrick79@yahoo.com",
                            EmailConfirmed = true,
                            InsertedDate = new DateTime(2022, 7, 10, 7, 37, 7, 279, DateTimeKind.Unspecified).AddTicks(1846),
                            LockoutEnabled = false,
                            NormalizedEmail = "FREDRICK79@YAHOO.COM",
                            NormalizedUserName = "PINK25",
                            PasswordHash = "VRFCdPUjbN",
                            PhoneNumber = "262.799.2627",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "avbNj49njJ",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "Pink25"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fdf201aa-440c-4756-860b-d36490f0db71",
                            Email = "Karson_Schimmel63@yahoo.com",
                            EmailConfirmed = true,
                            InsertedDate = new DateTime(2022, 10, 28, 16, 26, 54, 701, DateTimeKind.Unspecified).AddTicks(112),
                            LockoutEnabled = false,
                            NormalizedEmail = "KARSON_SCHIMMEL63@YAHOO.COM",
                            NormalizedUserName = "ELISA.SCHNEIDER",
                            PasswordHash = "Ou5mZCIEf2",
                            PhoneNumber = "402.331.3531",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Ylqivs3U5E",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "Elisa.Schneider"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e075c096-b0de-4d81-ad00-64d126f14570",
                            Email = "Emie.Gutkowski@hotmail.com",
                            EmailConfirmed = true,
                            InsertedDate = new DateTime(2022, 6, 3, 13, 0, 52, 757, DateTimeKind.Unspecified).AddTicks(2141),
                            LockoutEnabled = false,
                            NormalizedEmail = "EMIE.GUTKOWSKI@HOTMAIL.COM",
                            NormalizedUserName = "DON.ZBONCAK",
                            PasswordHash = "dYjHbVit_m",
                            PhoneNumber = "426-863-0157",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "wyeAv8VDI0",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "Don.Zboncak"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ad129402-f409-401c-bf29-0b3457bf6a10",
                            Email = "Chet13@gmail.com",
                            EmailConfirmed = true,
                            InsertedDate = new DateTime(2022, 3, 4, 4, 49, 10, 572, DateTimeKind.Unspecified).AddTicks(2396),
                            LockoutEnabled = false,
                            NormalizedEmail = "CHET13@GMAIL.COM",
                            NormalizedUserName = "KELSI.MEDHURST12",
                            PasswordHash = "XRwgtjvwDt",
                            PhoneNumber = "901.819.8610 x90274",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "xNJ13iWV2K",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "Kelsi.Medhurst12"
                        });
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppUserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("DataStatus");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 3,
                            InsertedDate = new DateTime(2022, 9, 25, 15, 29, 30, 910, DateTimeKind.Unspecified).AddTicks(3246),
                            Status = 1
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 3,
                            InsertedDate = new DateTime(2020, 9, 19, 12, 54, 5, 638, DateTimeKind.Unspecified).AddTicks(1524),
                            Status = 1
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 1,
                            InsertedDate = new DateTime(2021, 8, 19, 5, 53, 52, 743, DateTimeKind.Unspecified).AddTicks(1990),
                            Status = 1
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 1,
                            InsertedDate = new DateTime(2021, 1, 18, 0, 29, 53, 740, DateTimeKind.Unspecified).AddTicks(9792),
                            Status = 1
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2,
                            InsertedDate = new DateTime(2022, 2, 12, 15, 49, 29, 663, DateTimeKind.Unspecified).AddTicks(8906),
                            Status = 1
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2,
                            InsertedDate = new DateTime(2022, 5, 4, 12, 48, 33, 164, DateTimeKind.Unspecified).AddTicks(900),
                            Status = 1
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 3,
                            InsertedDate = new DateTime(2021, 6, 12, 3, 46, 33, 495, DateTimeKind.Unspecified).AddTicks(5225),
                            Status = 1
                        });
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppUserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("DataStatus");

                    b.HasKey("Id");

                    b.HasIndex("ParentID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "All",
                            InsertedDate = new DateTime(2021, 9, 23, 5, 3, 5, 491, DateTimeKind.Unspecified).AddTicks(666),
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Games",
                            InsertedDate = new DateTime(2021, 8, 4, 10, 37, 30, 424, DateTimeKind.Unspecified).AddTicks(9610),
                            ParentID = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Outdoors",
                            InsertedDate = new DateTime(2021, 5, 30, 15, 43, 27, 467, DateTimeKind.Unspecified).AddTicks(2445),
                            ParentID = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Industrial",
                            InsertedDate = new DateTime(2021, 4, 10, 8, 10, 20, 309, DateTimeKind.Unspecified).AddTicks(7800),
                            ParentID = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Health",
                            InsertedDate = new DateTime(2022, 8, 17, 8, 25, 24, 386, DateTimeKind.Unspecified).AddTicks(6343),
                            ParentID = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Jewelery",
                            InsertedDate = new DateTime(2022, 4, 21, 8, 23, 32, 617, DateTimeKind.Unspecified).AddTicks(7810),
                            ParentID = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CategoryName = "Industrial",
                            InsertedDate = new DateTime(2020, 4, 3, 17, 42, 52, 436, DateTimeKind.Unspecified).AddTicks(4698),
                            ParentID = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            CategoryName = "Music",
                            InsertedDate = new DateTime(2020, 7, 6, 0, 31, 56, 556, DateTimeKind.Unspecified).AddTicks(883),
                            ParentID = 5,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            CategoryName = "Computers",
                            InsertedDate = new DateTime(2021, 10, 11, 5, 5, 42, 500, DateTimeKind.Unspecified).AddTicks(4882),
                            ParentID = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            CategoryName = "Automotive",
                            InsertedDate = new DateTime(2021, 1, 25, 8, 3, 10, 945, DateTimeKind.Unspecified).AddTicks(5811),
                            ParentID = 3,
                            Status = 1
                        });
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("DataStatus");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryID = 7,
                            InsertedDate = new DateTime(2020, 9, 7, 0, 38, 30, 460, DateTimeKind.Unspecified).AddTicks(2536),
                            Name = "Intelligent Cotton Pizza",
                            Price = 51m,
                            Status = 1,
                            Stock = 131
                        },
                        new
                        {
                            Id = 2,
                            CategoryID = 2,
                            InsertedDate = new DateTime(2020, 10, 24, 1, 31, 8, 991, DateTimeKind.Unspecified).AddTicks(1161),
                            Name = "Small Cotton Towels",
                            Price = 52m,
                            Status = 1,
                            Stock = 39
                        },
                        new
                        {
                            Id = 3,
                            CategoryID = 2,
                            InsertedDate = new DateTime(2022, 3, 5, 3, 54, 57, 394, DateTimeKind.Unspecified).AddTicks(9329),
                            Name = "Rustic Metal Car",
                            Price = 50m,
                            Status = 1,
                            Stock = 113
                        },
                        new
                        {
                            Id = 4,
                            CategoryID = 5,
                            InsertedDate = new DateTime(2020, 5, 11, 20, 22, 24, 657, DateTimeKind.Unspecified).AddTicks(883),
                            Name = "Awesome Rubber Chips",
                            Price = 53m,
                            Status = 1,
                            Stock = 1
                        },
                        new
                        {
                            Id = 5,
                            CategoryID = 2,
                            InsertedDate = new DateTime(2021, 9, 5, 7, 14, 50, 636, DateTimeKind.Unspecified).AddTicks(289),
                            Name = "Generic Frozen Chair",
                            Price = 52m,
                            Status = 1,
                            Stock = 185
                        },
                        new
                        {
                            Id = 6,
                            CategoryID = 10,
                            InsertedDate = new DateTime(2022, 6, 8, 3, 6, 2, 504, DateTimeKind.Unspecified).AddTicks(4275),
                            Name = "Practical Plastic Hat",
                            Price = 55m,
                            Status = 1,
                            Stock = 61
                        },
                        new
                        {
                            Id = 7,
                            CategoryID = 3,
                            InsertedDate = new DateTime(2022, 10, 30, 0, 2, 54, 702, DateTimeKind.Unspecified).AddTicks(6756),
                            Name = "Gorgeous Fresh Sausages",
                            Price = 54m,
                            Status = 1,
                            Stock = 123
                        },
                        new
                        {
                            Id = 8,
                            CategoryID = 7,
                            InsertedDate = new DateTime(2020, 11, 17, 19, 53, 55, 382, DateTimeKind.Unspecified).AddTicks(8700),
                            Name = "Generic Frozen Chair",
                            Price = 55m,
                            Status = 1,
                            Stock = 58
                        },
                        new
                        {
                            Id = 9,
                            CategoryID = 2,
                            InsertedDate = new DateTime(2020, 10, 9, 19, 15, 32, 143, DateTimeKind.Unspecified).AddTicks(5691),
                            Name = "Rustic Granite Cheese",
                            Price = 49m,
                            Status = 1,
                            Stock = 154
                        },
                        new
                        {
                            Id = 10,
                            CategoryID = 6,
                            InsertedDate = new DateTime(2022, 2, 28, 21, 25, 23, 267, DateTimeKind.Unspecified).AddTicks(2417),
                            Name = "Sleek Wooden Fish",
                            Price = 50m,
                            Status = 1,
                            Stock = 159
                        },
                        new
                        {
                            Id = 11,
                            CategoryID = 4,
                            InsertedDate = new DateTime(2022, 5, 17, 6, 48, 30, 91, DateTimeKind.Unspecified).AddTicks(3159),
                            Name = "Intelligent Steel Salad",
                            Price = 57m,
                            Status = 1,
                            Stock = 1
                        },
                        new
                        {
                            Id = 12,
                            CategoryID = 1,
                            InsertedDate = new DateTime(2020, 7, 17, 5, 21, 26, 257, DateTimeKind.Unspecified).AddTicks(5144),
                            Name = "Handmade Steel Towels",
                            Price = 56m,
                            Status = 1,
                            Stock = 23
                        },
                        new
                        {
                            Id = 13,
                            CategoryID = 6,
                            InsertedDate = new DateTime(2020, 12, 2, 0, 36, 41, 504, DateTimeKind.Unspecified).AddTicks(6255),
                            Name = "Ergonomic Frozen Towels",
                            Price = 53m,
                            Status = 1,
                            Stock = 181
                        },
                        new
                        {
                            Id = 14,
                            CategoryID = 10,
                            InsertedDate = new DateTime(2022, 12, 27, 1, 42, 14, 377, DateTimeKind.Unspecified).AddTicks(7199),
                            Name = "Practical Metal Bike",
                            Price = 57m,
                            Status = 1,
                            Stock = 18
                        },
                        new
                        {
                            Id = 15,
                            CategoryID = 3,
                            InsertedDate = new DateTime(2021, 12, 7, 1, 17, 22, 221, DateTimeKind.Unspecified).AddTicks(7107),
                            Name = "Ergonomic Cotton Tuna",
                            Price = 54m,
                            Status = 1,
                            Stock = 70
                        },
                        new
                        {
                            Id = 16,
                            CategoryID = 10,
                            InsertedDate = new DateTime(2022, 5, 7, 1, 28, 25, 961, DateTimeKind.Unspecified).AddTicks(4145),
                            Name = "Intelligent Fresh Table",
                            Price = 56m,
                            Status = 1,
                            Stock = 198
                        },
                        new
                        {
                            Id = 17,
                            CategoryID = 5,
                            InsertedDate = new DateTime(2022, 2, 3, 6, 48, 12, 530, DateTimeKind.Unspecified).AddTicks(7399),
                            Name = "Fantastic Cotton Fish",
                            Price = 55m,
                            Status = 1,
                            Stock = 23
                        },
                        new
                        {
                            Id = 18,
                            CategoryID = 5,
                            InsertedDate = new DateTime(2022, 6, 6, 19, 52, 45, 685, DateTimeKind.Unspecified).AddTicks(1076),
                            Name = "Small Frozen Salad",
                            Price = 53m,
                            Status = 1,
                            Stock = 143
                        },
                        new
                        {
                            Id = 19,
                            CategoryID = 1,
                            InsertedDate = new DateTime(2021, 1, 22, 13, 47, 32, 784, DateTimeKind.Unspecified).AddTicks(4537),
                            Name = "Small Concrete Pants",
                            Price = 52m,
                            Status = 1,
                            Stock = 20
                        },
                        new
                        {
                            Id = 20,
                            CategoryID = 1,
                            InsertedDate = new DateTime(2021, 8, 6, 22, 6, 13, 547, DateTimeKind.Unspecified).AddTicks(5592),
                            Name = "Licensed Soft Pizza",
                            Price = 51m,
                            Status = 1,
                            Stock = 86
                        },
                        new
                        {
                            Id = 21,
                            CategoryID = 9,
                            InsertedDate = new DateTime(2021, 8, 2, 2, 41, 17, 223, DateTimeKind.Unspecified).AddTicks(2970),
                            Name = "Handmade Rubber Chicken",
                            Price = 51m,
                            Status = 1,
                            Stock = 177
                        },
                        new
                        {
                            Id = 22,
                            CategoryID = 10,
                            InsertedDate = new DateTime(2020, 6, 19, 6, 22, 4, 281, DateTimeKind.Unspecified).AddTicks(4670),
                            Name = "Incredible Soft Pants",
                            Price = 52m,
                            Status = 1,
                            Stock = 182
                        },
                        new
                        {
                            Id = 23,
                            CategoryID = 3,
                            InsertedDate = new DateTime(2022, 8, 23, 19, 44, 37, 664, DateTimeKind.Unspecified).AddTicks(9329),
                            Name = "Handcrafted Fresh Computer",
                            Price = 52m,
                            Status = 1,
                            Stock = 161
                        },
                        new
                        {
                            Id = 24,
                            CategoryID = 4,
                            InsertedDate = new DateTime(2023, 1, 1, 16, 56, 10, 600, DateTimeKind.Unspecified).AddTicks(3725),
                            Name = "Intelligent Concrete Pants",
                            Price = 50m,
                            Status = 1,
                            Stock = 71
                        },
                        new
                        {
                            Id = 25,
                            CategoryID = 7,
                            InsertedDate = new DateTime(2021, 6, 18, 8, 39, 51, 142, DateTimeKind.Unspecified).AddTicks(5081),
                            Name = "Rustic Cotton Mouse",
                            Price = 51m,
                            Status = 1,
                            Stock = 16
                        },
                        new
                        {
                            Id = 26,
                            CategoryID = 5,
                            InsertedDate = new DateTime(2021, 6, 14, 21, 0, 5, 390, DateTimeKind.Unspecified).AddTicks(3651),
                            Name = "Sleek Plastic Soap",
                            Price = 49m,
                            Status = 1,
                            Stock = 49
                        },
                        new
                        {
                            Id = 27,
                            CategoryID = 3,
                            InsertedDate = new DateTime(2020, 12, 8, 5, 30, 56, 922, DateTimeKind.Unspecified).AddTicks(6270),
                            Name = "Tasty Wooden Car",
                            Price = 56m,
                            Status = 1,
                            Stock = 173
                        },
                        new
                        {
                            Id = 28,
                            CategoryID = 2,
                            InsertedDate = new DateTime(2020, 8, 17, 6, 13, 47, 476, DateTimeKind.Unspecified).AddTicks(280),
                            Name = "Practical Wooden Mouse",
                            Price = 49m,
                            Status = 1,
                            Stock = 152
                        },
                        new
                        {
                            Id = 29,
                            CategoryID = 8,
                            InsertedDate = new DateTime(2020, 10, 20, 6, 22, 47, 708, DateTimeKind.Unspecified).AddTicks(1714),
                            Name = "Awesome Concrete Tuna",
                            Price = 51m,
                            Status = 1,
                            Stock = 47
                        },
                        new
                        {
                            Id = 30,
                            CategoryID = 8,
                            InsertedDate = new DateTime(2020, 11, 27, 3, 42, 37, 757, DateTimeKind.Unspecified).AddTicks(8076),
                            Name = "Tasty Soft Hat",
                            Price = 49m,
                            Status = 1,
                            Stock = 146
                        });
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MadeIn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RelaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("DataStatus");

                    b.HasKey("Id");

                    b.ToTable("ProductFeatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InsertedDate = new DateTime(2021, 5, 3, 10, 22, 51, 442, DateTimeKind.Unspecified).AddTicks(1535),
                            MadeIn = "Canada",
                            RelaseDate = new DateTime(2021, 9, 22, 11, 19, 37, 939, DateTimeKind.Unspecified).AddTicks(7258),
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            InsertedDate = new DateTime(2022, 12, 19, 12, 17, 36, 866, DateTimeKind.Unspecified).AddTicks(2926),
                            MadeIn = "El Salvador",
                            RelaseDate = new DateTime(2022, 6, 4, 23, 21, 20, 83, DateTimeKind.Unspecified).AddTicks(8880),
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            InsertedDate = new DateTime(2020, 5, 26, 21, 29, 4, 980, DateTimeKind.Unspecified).AddTicks(2572),
                            MadeIn = "Rwanda",
                            RelaseDate = new DateTime(2021, 7, 22, 10, 36, 37, 485, DateTimeKind.Unspecified).AddTicks(1681),
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            InsertedDate = new DateTime(2021, 6, 24, 17, 55, 16, 560, DateTimeKind.Unspecified).AddTicks(6109),
                            MadeIn = "Liechtenstein",
                            RelaseDate = new DateTime(2021, 1, 12, 22, 48, 52, 900, DateTimeKind.Unspecified).AddTicks(9269),
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            InsertedDate = new DateTime(2022, 6, 20, 15, 53, 58, 348, DateTimeKind.Unspecified).AddTicks(1480),
                            MadeIn = "Luxembourg",
                            RelaseDate = new DateTime(2020, 9, 10, 11, 9, 3, 838, DateTimeKind.Unspecified).AddTicks(9810),
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            InsertedDate = new DateTime(2022, 9, 1, 6, 39, 26, 171, DateTimeKind.Unspecified).AddTicks(833),
                            MadeIn = "Guinea-Bissau",
                            RelaseDate = new DateTime(2020, 8, 12, 6, 55, 47, 907, DateTimeKind.Unspecified).AddTicks(2272),
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            InsertedDate = new DateTime(2021, 12, 27, 1, 40, 25, 800, DateTimeKind.Unspecified).AddTicks(6817),
                            MadeIn = "Czech Republic",
                            RelaseDate = new DateTime(2020, 9, 30, 23, 47, 30, 34, DateTimeKind.Unspecified).AddTicks(30),
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            InsertedDate = new DateTime(2020, 11, 26, 2, 20, 27, 279, DateTimeKind.Unspecified).AddTicks(864),
                            MadeIn = "Niue",
                            RelaseDate = new DateTime(2020, 9, 26, 2, 54, 39, 704, DateTimeKind.Unspecified).AddTicks(1427),
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            InsertedDate = new DateTime(2020, 6, 23, 2, 9, 43, 262, DateTimeKind.Unspecified).AddTicks(7373),
                            MadeIn = "Barbados",
                            RelaseDate = new DateTime(2021, 12, 30, 22, 20, 53, 173, DateTimeKind.Unspecified).AddTicks(1424),
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            InsertedDate = new DateTime(2022, 1, 2, 17, 36, 12, 890, DateTimeKind.Unspecified).AddTicks(8425),
                            MadeIn = "Australia",
                            RelaseDate = new DateTime(2020, 10, 25, 8, 10, 0, 464, DateTimeKind.Unspecified).AddTicks(6366),
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            InsertedDate = new DateTime(2021, 7, 30, 14, 42, 40, 313, DateTimeKind.Unspecified).AddTicks(6034),
                            MadeIn = "Chad",
                            RelaseDate = new DateTime(2022, 8, 24, 6, 30, 24, 410, DateTimeKind.Unspecified).AddTicks(3239),
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            InsertedDate = new DateTime(2022, 7, 9, 10, 51, 5, 943, DateTimeKind.Unspecified).AddTicks(9118),
                            MadeIn = "Bouvet Island (Bouvetoya)",
                            RelaseDate = new DateTime(2022, 10, 20, 4, 42, 18, 46, DateTimeKind.Unspecified).AddTicks(1686),
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            InsertedDate = new DateTime(2022, 5, 25, 0, 2, 31, 425, DateTimeKind.Unspecified).AddTicks(8770),
                            MadeIn = "Lebanon",
                            RelaseDate = new DateTime(2021, 8, 23, 7, 44, 12, 388, DateTimeKind.Unspecified).AddTicks(2883),
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            InsertedDate = new DateTime(2021, 12, 6, 21, 13, 22, 528, DateTimeKind.Unspecified).AddTicks(6889),
                            MadeIn = "Kiribati",
                            RelaseDate = new DateTime(2021, 7, 31, 18, 31, 34, 33, DateTimeKind.Unspecified).AddTicks(14),
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            InsertedDate = new DateTime(2020, 11, 25, 20, 6, 27, 738, DateTimeKind.Unspecified).AddTicks(8771),
                            MadeIn = "Uzbekistan",
                            RelaseDate = new DateTime(2022, 2, 21, 22, 43, 42, 346, DateTimeKind.Unspecified).AddTicks(9991),
                            Status = 1
                        },
                        new
                        {
                            Id = 16,
                            InsertedDate = new DateTime(2021, 1, 14, 12, 52, 3, 430, DateTimeKind.Unspecified).AddTicks(6408),
                            MadeIn = "Tunisia",
                            RelaseDate = new DateTime(2022, 8, 19, 4, 32, 41, 228, DateTimeKind.Unspecified).AddTicks(5346),
                            Status = 1
                        },
                        new
                        {
                            Id = 17,
                            InsertedDate = new DateTime(2020, 4, 18, 18, 2, 16, 587, DateTimeKind.Unspecified).AddTicks(5207),
                            MadeIn = "Colombia",
                            RelaseDate = new DateTime(2023, 1, 4, 19, 25, 54, 161, DateTimeKind.Unspecified).AddTicks(6546),
                            Status = 1
                        },
                        new
                        {
                            Id = 18,
                            InsertedDate = new DateTime(2022, 8, 2, 15, 7, 32, 709, DateTimeKind.Unspecified).AddTicks(7131),
                            MadeIn = "Comoros",
                            RelaseDate = new DateTime(2021, 4, 21, 20, 38, 50, 187, DateTimeKind.Unspecified).AddTicks(1653),
                            Status = 1
                        },
                        new
                        {
                            Id = 19,
                            InsertedDate = new DateTime(2022, 9, 3, 3, 16, 52, 871, DateTimeKind.Unspecified).AddTicks(1236),
                            MadeIn = "Rwanda",
                            RelaseDate = new DateTime(2022, 12, 23, 17, 31, 24, 127, DateTimeKind.Unspecified).AddTicks(3181),
                            Status = 1
                        },
                        new
                        {
                            Id = 20,
                            InsertedDate = new DateTime(2021, 2, 22, 4, 52, 39, 83, DateTimeKind.Unspecified).AddTicks(6136),
                            MadeIn = "Trinidad and Tobago",
                            RelaseDate = new DateTime(2021, 2, 2, 19, 19, 48, 170, DateTimeKind.Unspecified).AddTicks(7450),
                            Status = 1
                        },
                        new
                        {
                            Id = 21,
                            InsertedDate = new DateTime(2022, 4, 28, 0, 8, 45, 620, DateTimeKind.Unspecified).AddTicks(8302),
                            MadeIn = "Antigua and Barbuda",
                            RelaseDate = new DateTime(2022, 12, 4, 16, 23, 1, 33, DateTimeKind.Unspecified).AddTicks(8528),
                            Status = 1
                        },
                        new
                        {
                            Id = 22,
                            InsertedDate = new DateTime(2021, 1, 9, 8, 12, 34, 405, DateTimeKind.Unspecified).AddTicks(4967),
                            MadeIn = "Dominican Republic",
                            RelaseDate = new DateTime(2021, 12, 16, 9, 49, 0, 657, DateTimeKind.Unspecified).AddTicks(8319),
                            Status = 1
                        },
                        new
                        {
                            Id = 23,
                            InsertedDate = new DateTime(2021, 10, 16, 5, 46, 55, 331, DateTimeKind.Unspecified).AddTicks(5008),
                            MadeIn = "Niger",
                            RelaseDate = new DateTime(2022, 12, 17, 22, 22, 45, 920, DateTimeKind.Unspecified).AddTicks(6051),
                            Status = 1
                        },
                        new
                        {
                            Id = 24,
                            InsertedDate = new DateTime(2021, 10, 31, 23, 34, 3, 451, DateTimeKind.Unspecified).AddTicks(8921),
                            MadeIn = "French Southern Territories",
                            RelaseDate = new DateTime(2020, 11, 29, 11, 3, 29, 3, DateTimeKind.Unspecified).AddTicks(5020),
                            Status = 1
                        },
                        new
                        {
                            Id = 25,
                            InsertedDate = new DateTime(2021, 1, 15, 8, 24, 32, 598, DateTimeKind.Unspecified).AddTicks(7708),
                            MadeIn = "Anguilla",
                            RelaseDate = new DateTime(2020, 12, 3, 1, 36, 22, 520, DateTimeKind.Unspecified).AddTicks(9155),
                            Status = 1
                        },
                        new
                        {
                            Id = 26,
                            InsertedDate = new DateTime(2021, 7, 21, 11, 15, 31, 818, DateTimeKind.Unspecified).AddTicks(6893),
                            MadeIn = "Reunion",
                            RelaseDate = new DateTime(2021, 9, 8, 4, 47, 43, 729, DateTimeKind.Unspecified).AddTicks(4062),
                            Status = 1
                        },
                        new
                        {
                            Id = 27,
                            InsertedDate = new DateTime(2022, 10, 25, 1, 20, 23, 578, DateTimeKind.Unspecified).AddTicks(9734),
                            MadeIn = "South Georgia and the South Sandwich Islands",
                            RelaseDate = new DateTime(2022, 3, 6, 19, 0, 56, 65, DateTimeKind.Unspecified).AddTicks(8864),
                            Status = 1
                        },
                        new
                        {
                            Id = 28,
                            InsertedDate = new DateTime(2021, 4, 21, 2, 19, 36, 127, DateTimeKind.Unspecified).AddTicks(1087),
                            MadeIn = "Ethiopia",
                            RelaseDate = new DateTime(2020, 5, 29, 15, 18, 40, 520, DateTimeKind.Unspecified).AddTicks(241),
                            Status = 1
                        },
                        new
                        {
                            Id = 29,
                            InsertedDate = new DateTime(2020, 8, 2, 0, 29, 22, 277, DateTimeKind.Unspecified).AddTicks(934),
                            MadeIn = "Philippines",
                            RelaseDate = new DateTime(2022, 5, 15, 22, 34, 41, 598, DateTimeKind.Unspecified).AddTicks(9556),
                            Status = 1
                        },
                        new
                        {
                            Id = 30,
                            InsertedDate = new DateTime(2022, 12, 26, 18, 2, 7, 158, DateTimeKind.Unspecified).AddTicks(1348),
                            MadeIn = "Namibia",
                            RelaseDate = new DateTime(2020, 9, 20, 5, 23, 32, 16, DateTimeKind.Unspecified).AddTicks(5840),
                            Status = 1
                        });
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.ProductSupplier", b =>
                {
                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxCountPerShipping")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("DataStatus");

                    b.HasKey("ProductID", "SupplierID");

                    b.HasIndex("SupplierID");

                    b.ToTable("ProductsSuppliers");

                    b.HasData(
                        new
                        {
                            ProductID = 4,
                            SupplierID = 6,
                            InsertedDate = new DateTime(2020, 5, 27, 9, 47, 3, 59, DateTimeKind.Unspecified).AddTicks(7681),
                            MaxCountPerShipping = 161,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 19,
                            SupplierID = 6,
                            InsertedDate = new DateTime(2022, 1, 20, 1, 54, 54, 537, DateTimeKind.Unspecified).AddTicks(386),
                            MaxCountPerShipping = 131,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 13,
                            SupplierID = 6,
                            InsertedDate = new DateTime(2022, 1, 25, 15, 30, 4, 303, DateTimeKind.Unspecified).AddTicks(3971),
                            MaxCountPerShipping = 171,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 19,
                            SupplierID = 2,
                            InsertedDate = new DateTime(2022, 11, 30, 2, 54, 2, 211, DateTimeKind.Unspecified).AddTicks(7867),
                            MaxCountPerShipping = 90,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 10,
                            SupplierID = 9,
                            InsertedDate = new DateTime(2021, 2, 1, 10, 47, 40, 582, DateTimeKind.Unspecified).AddTicks(1342),
                            MaxCountPerShipping = 103,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 6,
                            SupplierID = 1,
                            InsertedDate = new DateTime(2021, 9, 5, 21, 31, 4, 282, DateTimeKind.Unspecified).AddTicks(1973),
                            MaxCountPerShipping = 182,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 14,
                            SupplierID = 3,
                            InsertedDate = new DateTime(2020, 9, 22, 16, 21, 9, 876, DateTimeKind.Unspecified).AddTicks(1652),
                            MaxCountPerShipping = 163,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 17,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2022, 3, 12, 7, 41, 53, 981, DateTimeKind.Unspecified).AddTicks(883),
                            MaxCountPerShipping = 88,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 6,
                            SupplierID = 4,
                            InsertedDate = new DateTime(2022, 6, 11, 14, 8, 3, 621, DateTimeKind.Unspecified).AddTicks(9619),
                            MaxCountPerShipping = 54,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 11,
                            SupplierID = 4,
                            InsertedDate = new DateTime(2022, 6, 14, 1, 11, 54, 937, DateTimeKind.Unspecified).AddTicks(2582),
                            MaxCountPerShipping = 85,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 2,
                            SupplierID = 2,
                            InsertedDate = new DateTime(2020, 6, 23, 12, 51, 40, 939, DateTimeKind.Unspecified).AddTicks(6742),
                            MaxCountPerShipping = 136,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 22,
                            SupplierID = 9,
                            InsertedDate = new DateTime(2020, 11, 26, 21, 57, 7, 88, DateTimeKind.Unspecified).AddTicks(3858),
                            MaxCountPerShipping = 52,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 28,
                            SupplierID = 4,
                            InsertedDate = new DateTime(2020, 8, 3, 9, 43, 2, 140, DateTimeKind.Unspecified).AddTicks(5667),
                            MaxCountPerShipping = 152,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 24,
                            SupplierID = 7,
                            InsertedDate = new DateTime(2021, 10, 12, 9, 8, 46, 629, DateTimeKind.Unspecified).AddTicks(1259),
                            MaxCountPerShipping = 194,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 23,
                            SupplierID = 8,
                            InsertedDate = new DateTime(2021, 11, 6, 5, 30, 26, 44, DateTimeKind.Unspecified).AddTicks(3177),
                            MaxCountPerShipping = 55,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 16,
                            SupplierID = 10,
                            InsertedDate = new DateTime(2022, 8, 12, 6, 58, 28, 872, DateTimeKind.Unspecified).AddTicks(5605),
                            MaxCountPerShipping = 122,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 29,
                            SupplierID = 7,
                            InsertedDate = new DateTime(2020, 12, 19, 13, 37, 29, 938, DateTimeKind.Unspecified).AddTicks(3140),
                            MaxCountPerShipping = 124,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 24,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2020, 4, 10, 6, 57, 41, 916, DateTimeKind.Unspecified).AddTicks(334),
                            MaxCountPerShipping = 166,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 10,
                            SupplierID = 1,
                            InsertedDate = new DateTime(2022, 8, 15, 4, 38, 8, 14, DateTimeKind.Unspecified).AddTicks(2154),
                            MaxCountPerShipping = 123,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 21,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2020, 11, 24, 4, 41, 20, 547, DateTimeKind.Unspecified).AddTicks(2835),
                            MaxCountPerShipping = 110,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 29,
                            SupplierID = 10,
                            InsertedDate = new DateTime(2021, 7, 31, 9, 43, 34, 74, DateTimeKind.Unspecified).AddTicks(992),
                            MaxCountPerShipping = 118,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 25,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2022, 5, 26, 1, 18, 40, 476, DateTimeKind.Unspecified).AddTicks(6910),
                            MaxCountPerShipping = 96,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 26,
                            SupplierID = 8,
                            InsertedDate = new DateTime(2020, 12, 19, 2, 58, 55, 175, DateTimeKind.Unspecified).AddTicks(6825),
                            MaxCountPerShipping = 4,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 20,
                            SupplierID = 3,
                            InsertedDate = new DateTime(2020, 8, 5, 20, 23, 56, 980, DateTimeKind.Unspecified).AddTicks(3039),
                            MaxCountPerShipping = 21,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 6,
                            SupplierID = 6,
                            InsertedDate = new DateTime(2021, 1, 23, 13, 36, 5, 643, DateTimeKind.Unspecified).AddTicks(472),
                            MaxCountPerShipping = 192,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 5,
                            SupplierID = 10,
                            InsertedDate = new DateTime(2022, 9, 20, 14, 7, 54, 625, DateTimeKind.Unspecified).AddTicks(1562),
                            MaxCountPerShipping = 123,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 8,
                            SupplierID = 2,
                            InsertedDate = new DateTime(2020, 11, 15, 12, 43, 31, 445, DateTimeKind.Unspecified).AddTicks(5668),
                            MaxCountPerShipping = 175,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 4,
                            SupplierID = 10,
                            InsertedDate = new DateTime(2021, 12, 3, 16, 42, 18, 407, DateTimeKind.Unspecified).AddTicks(2024),
                            MaxCountPerShipping = 191,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 12,
                            SupplierID = 8,
                            InsertedDate = new DateTime(2021, 2, 23, 7, 31, 43, 283, DateTimeKind.Unspecified).AddTicks(5031),
                            MaxCountPerShipping = 129,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 3,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2021, 5, 23, 19, 28, 30, 741, DateTimeKind.Unspecified).AddTicks(420),
                            MaxCountPerShipping = 158,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 17,
                            SupplierID = 7,
                            InsertedDate = new DateTime(2020, 4, 22, 12, 48, 12, 434, DateTimeKind.Unspecified).AddTicks(5090),
                            MaxCountPerShipping = 14,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 9,
                            SupplierID = 7,
                            InsertedDate = new DateTime(2022, 2, 18, 22, 32, 31, 213, DateTimeKind.Unspecified).AddTicks(9464),
                            MaxCountPerShipping = 126,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 6,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2022, 2, 22, 6, 1, 35, 371, DateTimeKind.Unspecified).AddTicks(5101),
                            MaxCountPerShipping = 174,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 18,
                            SupplierID = 6,
                            InsertedDate = new DateTime(2021, 6, 9, 23, 57, 50, 674, DateTimeKind.Unspecified).AddTicks(3113),
                            MaxCountPerShipping = 31,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 6,
                            SupplierID = 2,
                            InsertedDate = new DateTime(2020, 8, 18, 9, 1, 15, 739, DateTimeKind.Unspecified).AddTicks(3439),
                            MaxCountPerShipping = 200,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 26,
                            SupplierID = 4,
                            InsertedDate = new DateTime(2022, 10, 17, 23, 33, 34, 794, DateTimeKind.Unspecified).AddTicks(9340),
                            MaxCountPerShipping = 184,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 1,
                            SupplierID = 1,
                            InsertedDate = new DateTime(2021, 2, 25, 8, 52, 7, 118, DateTimeKind.Unspecified).AddTicks(5033),
                            MaxCountPerShipping = 51,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 9,
                            SupplierID = 6,
                            InsertedDate = new DateTime(2020, 8, 27, 15, 57, 34, 333, DateTimeKind.Unspecified).AddTicks(4153),
                            MaxCountPerShipping = 79,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 18,
                            SupplierID = 8,
                            InsertedDate = new DateTime(2020, 5, 18, 23, 35, 9, 989, DateTimeKind.Unspecified).AddTicks(8214),
                            MaxCountPerShipping = 38,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 10,
                            SupplierID = 6,
                            InsertedDate = new DateTime(2021, 2, 26, 18, 18, 17, 504, DateTimeKind.Unspecified).AddTicks(797),
                            MaxCountPerShipping = 75,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 28,
                            SupplierID = 10,
                            InsertedDate = new DateTime(2022, 3, 22, 9, 59, 48, 638, DateTimeKind.Unspecified).AddTicks(2630),
                            MaxCountPerShipping = 188,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 21,
                            SupplierID = 2,
                            InsertedDate = new DateTime(2022, 1, 27, 5, 48, 47, 211, DateTimeKind.Unspecified).AddTicks(7691),
                            MaxCountPerShipping = 199,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 8,
                            SupplierID = 6,
                            InsertedDate = new DateTime(2022, 4, 30, 18, 49, 1, 421, DateTimeKind.Unspecified).AddTicks(2028),
                            MaxCountPerShipping = 151,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 16,
                            SupplierID = 3,
                            InsertedDate = new DateTime(2021, 5, 28, 22, 54, 8, 317, DateTimeKind.Unspecified).AddTicks(7057),
                            MaxCountPerShipping = 9,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 18,
                            SupplierID = 4,
                            InsertedDate = new DateTime(2022, 7, 15, 0, 57, 51, 618, DateTimeKind.Unspecified).AddTicks(9196),
                            MaxCountPerShipping = 70,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 7,
                            SupplierID = 8,
                            InsertedDate = new DateTime(2022, 10, 11, 11, 29, 48, 685, DateTimeKind.Unspecified).AddTicks(6129),
                            MaxCountPerShipping = 128,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 25,
                            SupplierID = 7,
                            InsertedDate = new DateTime(2021, 3, 12, 1, 10, 44, 303, DateTimeKind.Unspecified).AddTicks(6508),
                            MaxCountPerShipping = 143,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 23,
                            SupplierID = 1,
                            InsertedDate = new DateTime(2021, 8, 18, 11, 1, 36, 215, DateTimeKind.Unspecified).AddTicks(3274),
                            MaxCountPerShipping = 36,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 3,
                            SupplierID = 8,
                            InsertedDate = new DateTime(2021, 6, 12, 13, 31, 51, 818, DateTimeKind.Unspecified).AddTicks(8900),
                            MaxCountPerShipping = 31,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 8,
                            SupplierID = 4,
                            InsertedDate = new DateTime(2021, 7, 9, 6, 5, 26, 305, DateTimeKind.Unspecified).AddTicks(5424),
                            MaxCountPerShipping = 30,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 24,
                            SupplierID = 9,
                            InsertedDate = new DateTime(2022, 6, 28, 20, 20, 49, 128, DateTimeKind.Unspecified).AddTicks(1158),
                            MaxCountPerShipping = 34,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 23,
                            SupplierID = 9,
                            InsertedDate = new DateTime(2021, 8, 28, 15, 47, 44, 843, DateTimeKind.Unspecified).AddTicks(6422),
                            MaxCountPerShipping = 86,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 5,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2021, 10, 28, 11, 45, 19, 428, DateTimeKind.Unspecified).AddTicks(6045),
                            MaxCountPerShipping = 123,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 7,
                            SupplierID = 4,
                            InsertedDate = new DateTime(2022, 12, 4, 23, 58, 58, 703, DateTimeKind.Unspecified).AddTicks(9462),
                            MaxCountPerShipping = 91,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 13,
                            SupplierID = 2,
                            InsertedDate = new DateTime(2022, 3, 23, 17, 52, 19, 552, DateTimeKind.Unspecified).AddTicks(7869),
                            MaxCountPerShipping = 39,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 29,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2020, 9, 18, 12, 34, 41, 342, DateTimeKind.Unspecified).AddTicks(6112),
                            MaxCountPerShipping = 154,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 19,
                            SupplierID = 9,
                            InsertedDate = new DateTime(2022, 5, 19, 6, 18, 40, 2, DateTimeKind.Unspecified).AddTicks(6980),
                            MaxCountPerShipping = 85,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 27,
                            SupplierID = 2,
                            InsertedDate = new DateTime(2022, 11, 26, 2, 56, 7, 889, DateTimeKind.Unspecified).AddTicks(1315),
                            MaxCountPerShipping = 92,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 5,
                            SupplierID = 1,
                            InsertedDate = new DateTime(2022, 1, 28, 21, 56, 46, 293, DateTimeKind.Unspecified).AddTicks(9297),
                            MaxCountPerShipping = 150,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 8,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2021, 7, 13, 3, 57, 33, 303, DateTimeKind.Unspecified).AddTicks(5823),
                            MaxCountPerShipping = 68,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 9,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2020, 12, 24, 16, 18, 22, 334, DateTimeKind.Unspecified).AddTicks(8500),
                            MaxCountPerShipping = 168,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 15,
                            SupplierID = 2,
                            InsertedDate = new DateTime(2021, 11, 10, 12, 40, 42, 242, DateTimeKind.Unspecified).AddTicks(8494),
                            MaxCountPerShipping = 135,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 10,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2020, 4, 15, 13, 49, 9, 156, DateTimeKind.Unspecified).AddTicks(9733),
                            MaxCountPerShipping = 185,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 25,
                            SupplierID = 3,
                            InsertedDate = new DateTime(2022, 5, 14, 3, 45, 14, 270, DateTimeKind.Unspecified).AddTicks(6016),
                            MaxCountPerShipping = 125,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 15,
                            SupplierID = 4,
                            InsertedDate = new DateTime(2020, 8, 10, 2, 34, 56, 486, DateTimeKind.Unspecified).AddTicks(74),
                            MaxCountPerShipping = 60,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 7,
                            SupplierID = 9,
                            InsertedDate = new DateTime(2020, 6, 20, 14, 35, 14, 419, DateTimeKind.Unspecified).AddTicks(9767),
                            MaxCountPerShipping = 96,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 2,
                            SupplierID = 1,
                            InsertedDate = new DateTime(2022, 7, 21, 13, 27, 50, 708, DateTimeKind.Unspecified).AddTicks(1245),
                            MaxCountPerShipping = 57,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 2,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2022, 11, 2, 19, 15, 56, 989, DateTimeKind.Unspecified).AddTicks(3330),
                            MaxCountPerShipping = 14,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 5,
                            SupplierID = 8,
                            InsertedDate = new DateTime(2020, 6, 20, 18, 44, 7, 126, DateTimeKind.Unspecified).AddTicks(2943),
                            MaxCountPerShipping = 189,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 29,
                            SupplierID = 6,
                            InsertedDate = new DateTime(2021, 12, 21, 22, 28, 32, 831, DateTimeKind.Unspecified).AddTicks(7844),
                            MaxCountPerShipping = 200,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 22,
                            SupplierID = 2,
                            InsertedDate = new DateTime(2020, 8, 8, 22, 40, 58, 752, DateTimeKind.Unspecified).AddTicks(4455),
                            MaxCountPerShipping = 115,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 7,
                            SupplierID = 5,
                            InsertedDate = new DateTime(2022, 7, 6, 2, 31, 57, 984, DateTimeKind.Unspecified).AddTicks(1342),
                            MaxCountPerShipping = 5,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 9,
                            SupplierID = 2,
                            InsertedDate = new DateTime(2021, 1, 22, 8, 14, 10, 109, DateTimeKind.Unspecified).AddTicks(1391),
                            MaxCountPerShipping = 103,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 20,
                            SupplierID = 4,
                            InsertedDate = new DateTime(2021, 5, 17, 18, 24, 49, 501, DateTimeKind.Unspecified).AddTicks(6383),
                            MaxCountPerShipping = 169,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 13,
                            SupplierID = 9,
                            InsertedDate = new DateTime(2021, 9, 15, 21, 33, 20, 259, DateTimeKind.Unspecified).AddTicks(8834),
                            MaxCountPerShipping = 195,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 27,
                            SupplierID = 3,
                            InsertedDate = new DateTime(2020, 3, 25, 12, 57, 35, 156, DateTimeKind.Unspecified).AddTicks(5515),
                            MaxCountPerShipping = 86,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 18,
                            SupplierID = 7,
                            InsertedDate = new DateTime(2022, 10, 25, 19, 47, 0, 618, DateTimeKind.Unspecified).AddTicks(1226),
                            MaxCountPerShipping = 72,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 7,
                            SupplierID = 3,
                            InsertedDate = new DateTime(2022, 12, 10, 4, 38, 50, 269, DateTimeKind.Unspecified).AddTicks(6205),
                            MaxCountPerShipping = 172,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 29,
                            SupplierID = 2,
                            InsertedDate = new DateTime(2020, 3, 15, 15, 52, 51, 614, DateTimeKind.Unspecified).AddTicks(6486),
                            MaxCountPerShipping = 125,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 7,
                            SupplierID = 10,
                            InsertedDate = new DateTime(2022, 11, 19, 4, 12, 5, 57, DateTimeKind.Unspecified).AddTicks(9762),
                            MaxCountPerShipping = 75,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 5,
                            SupplierID = 4,
                            InsertedDate = new DateTime(2021, 10, 19, 0, 11, 10, 410, DateTimeKind.Unspecified).AddTicks(92),
                            MaxCountPerShipping = 161,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 19,
                            SupplierID = 3,
                            InsertedDate = new DateTime(2022, 1, 21, 1, 34, 36, 583, DateTimeKind.Unspecified).AddTicks(1119),
                            MaxCountPerShipping = 55,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 30,
                            SupplierID = 6,
                            InsertedDate = new DateTime(2021, 3, 6, 5, 1, 37, 661, DateTimeKind.Unspecified).AddTicks(2620),
                            MaxCountPerShipping = 120,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 11,
                            SupplierID = 7,
                            InsertedDate = new DateTime(2022, 10, 23, 7, 10, 37, 452, DateTimeKind.Unspecified).AddTicks(246),
                            MaxCountPerShipping = 150,
                            Status = 1
                        },
                        new
                        {
                            ProductID = 22,
                            SupplierID = 3,
                            InsertedDate = new DateTime(2021, 12, 24, 2, 31, 15, 654, DateTimeKind.Unspecified).AddTicks(513),
                            MaxCountPerShipping = 117,
                            Status = 1
                        });
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "3102 Lowe Route, East Dedricburgh, Qatar",
                            CompanyName = "Jaskolski Group",
                            InsertedDate = new DateTime(2022, 7, 7, 0, 47, 54, 709, DateTimeKind.Unspecified).AddTicks(7960),
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "20397 Watsica Shoal, Schmidtton, United Kingdom",
                            CompanyName = "Ward - Gorczany",
                            InsertedDate = new DateTime(2021, 9, 23, 7, 23, 46, 368, DateTimeKind.Unspecified).AddTicks(7362),
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = "08738 Ziemann Island, Haskellside, Cameroon",
                            CompanyName = "Zieme, Yundt and Kuvalis",
                            InsertedDate = new DateTime(2022, 3, 20, 14, 22, 49, 974, DateTimeKind.Unspecified).AddTicks(3348),
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            Address = "03781 Krajcik Meadows, Port Kay, Latvia",
                            CompanyName = "D'Amore, Schmeler and Spinka",
                            InsertedDate = new DateTime(2021, 10, 14, 12, 11, 47, 916, DateTimeKind.Unspecified).AddTicks(5643),
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            Address = "413 Stamm Forks, East Thomas, Iran",
                            CompanyName = "Ritchie - Graham",
                            InsertedDate = new DateTime(2020, 3, 30, 20, 58, 35, 0, DateTimeKind.Unspecified).AddTicks(2325),
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            Address = "685 Terry Bridge, New Arjunfort, Bangladesh",
                            CompanyName = "Bruen LLC",
                            InsertedDate = new DateTime(2023, 1, 5, 5, 41, 24, 363, DateTimeKind.Unspecified).AddTicks(4062),
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            Address = "096 McGlynn Oval, Brandimouth, Latvia",
                            CompanyName = "Nienow and Sons",
                            InsertedDate = new DateTime(2021, 6, 14, 6, 28, 2, 464, DateTimeKind.Unspecified).AddTicks(2135),
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            Address = "58744 Maurine Square, West Declanmouth, Colombia",
                            CompanyName = "Hamill and Sons",
                            InsertedDate = new DateTime(2021, 9, 17, 19, 58, 40, 723, DateTimeKind.Unspecified).AddTicks(5848),
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            Address = "21032 Senger Run, Lake Matilde, Slovenia",
                            CompanyName = "Kassulke - Okuneva",
                            InsertedDate = new DateTime(2022, 6, 30, 4, 56, 32, 438, DateTimeKind.Unspecified).AddTicks(5698),
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            Address = "25904 Krajcik Light, North Rafaelfort, Northern Mariana Islands",
                            CompanyName = "Hyatt LLC",
                            InsertedDate = new DateTime(2021, 8, 2, 19, 27, 45, 53, DateTimeKind.Unspecified).AddTicks(6355),
                            Status = 1
                        });
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppRoleClaim", b =>
                {
                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppUserClaim", b =>
                {
                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppUserLogin", b =>
                {
                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppUserRole", b =>
                {
                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.AppUserToken", b =>
                {
                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.Category", b =>
                {
                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.Category", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.Product", b =>
                {
                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.ProductFeature", b =>
                {
                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.Product", "Product")
                        .WithOne("ProductFeature")
                        .HasForeignKey("TrueOnion.DOMAIN.Entities.Concrates.ProductFeature", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.ProductSupplier", b =>
                {
                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.Product", "Product")
                        .WithMany("ProductSuppliers")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrueOnion.DOMAIN.Entities.Concrates.Supplier", "Supplier")
                        .WithMany("ProductSuppliers")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.Category", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.Product", b =>
                {
                    b.Navigation("ProductFeature")
                        .IsRequired();

                    b.Navigation("ProductSuppliers");
                });

            modelBuilder.Entity("TrueOnion.DOMAIN.Entities.Concrates.Supplier", b =>
                {
                    b.Navigation("ProductSuppliers");
                });
#pragma warning restore 612, 618
        }
    }
}
